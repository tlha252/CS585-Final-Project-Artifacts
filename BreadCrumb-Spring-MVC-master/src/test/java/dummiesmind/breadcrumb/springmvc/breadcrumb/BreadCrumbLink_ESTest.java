/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 13 00:08:52 GMT 2019
 */

package dummiesmind.breadcrumb.springmvc.breadcrumb;

import org.junit.Test;
import static org.junit.Assert.*;
import dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BreadCrumbLink_ESTest extends BreadCrumbLink_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      BreadCrumbLink breadCrumbLink1 = new BreadCrumbLink("Knd>)Ec?D", " 9d1", false, "s!Z4zN1nxjnW`!i");
      breadCrumbLink0.setParent(breadCrumbLink1);
      assertEquals("Knd>)Ec?D", breadCrumbLink1.getFamily());
      assertEquals("s!Z4zN1nxjnW`!i", breadCrumbLink1.getParentKey());
      assertFalse(breadCrumbLink1.isCurrentPage());
      assertEquals(" 9d1", breadCrumbLink1.getLabel());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      assertFalse(breadCrumbLink0.isCurrentPage());
      
      breadCrumbLink0.setCurrentPage(true);
      assertTrue(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("4h%WfB#<3.~", "4h%WfB#<3.~", false, "");
      boolean boolean0 = breadCrumbLink0.isCurrentPage();
      assertFalse(boolean0);
      assertEquals("", breadCrumbLink0.getParentKey());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getFamily());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getLabel());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("4h%WfB#<3.~", "4h%WfB#<3.~", true, "");
      breadCrumbLink0.setUrl("4h%WfB#<3.~");
      breadCrumbLink0.getUrl();
      assertEquals("", breadCrumbLink0.getParentKey());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getFamily());
      assertTrue(breadCrumbLink0.isCurrentPage());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getLabel());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("", "", true, "");
      breadCrumbLink0.setUrl("");
      breadCrumbLink0.getUrl();
      assertTrue(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, (String) null, true, "wa|r.");
      breadCrumbLink0.setPrevious(breadCrumbLink0);
      BreadCrumbLink breadCrumbLink1 = breadCrumbLink0.getPrevious();
      assertTrue(breadCrumbLink1.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, (String) null, true, "wa|r.");
      BreadCrumbLink breadCrumbLink1 = new BreadCrumbLink((String) null, "wa|r.", false, "");
      breadCrumbLink0.setPrevious(breadCrumbLink1);
      BreadCrumbLink breadCrumbLink2 = breadCrumbLink0.getPrevious();
      assertTrue(breadCrumbLink0.isCurrentPage());
      assertEquals("", breadCrumbLink2.getParentKey());
      assertFalse(breadCrumbLink2.isCurrentPage());
      assertEquals("wa|r.", breadCrumbLink2.getLabel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, (String) null, true, "wa|r.");
      breadCrumbLink0.setParentKey((String) null);
      breadCrumbLink0.getParentKey();
      assertTrue(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("yck5BYe<%4SigwL", "+", true, "yck5BYe<%4SigwL");
      breadCrumbLink0.setParent(breadCrumbLink0);
      BreadCrumbLink breadCrumbLink1 = breadCrumbLink0.getParent();
      assertEquals("+", breadCrumbLink1.getLabel());
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink1.getFamily());
      assertTrue(breadCrumbLink1.isCurrentPage());
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink1.getParentKey());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("4h%WfB#<3.~", "4h%WfB#<3.~", true, "");
      breadCrumbLink0.addNext((BreadCrumbLink) null);
      List<BreadCrumbLink> list0 = breadCrumbLink0.getNext();
      assertEquals("", breadCrumbLink0.getParentKey());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getLabel());
      assertEquals("4h%WfB#<3.~", breadCrumbLink0.getFamily());
      assertTrue(breadCrumbLink0.isCurrentPage());
      assertFalse(list0.contains(breadCrumbLink0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, (String) null, true, "wa|r.");
      String string0 = breadCrumbLink0.getLabel();
      assertTrue(breadCrumbLink0.isCurrentPage());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("yck5BYe<%4SigwL", "+", true, "yck5BYe<%4SigwL");
      assertEquals("+", breadCrumbLink0.getLabel());
      
      breadCrumbLink0.setLabel("");
      breadCrumbLink0.getLabel();
      assertTrue(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.setFamily("~AxYJ#%FEYQY72kG");
      breadCrumbLink0.getFamily();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("", "", true, "");
      breadCrumbLink0.getFamily();
      assertTrue(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("yck5BYe<%4SigwL", "+", true, "yck5BYe<%4SigwL");
      boolean boolean0 = breadCrumbLink0.isCurrentPage();
      assertTrue(boolean0);
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink0.getParentKey());
      assertEquals("+", breadCrumbLink0.getLabel());
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink0.getFamily());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      String string0 = breadCrumbLink0.getFamily();
      assertFalse(breadCrumbLink0.isCurrentPage());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.getNext();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.getPrevious();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink("yck5BYe<%4SigwL", "+", true, "yck5BYe<%4SigwL");
      String string0 = breadCrumbLink0.getLabel();
      assertEquals("+", string0);
      assertTrue(breadCrumbLink0.isCurrentPage());
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink0.getParentKey());
      assertEquals("yck5BYe<%4SigwL", breadCrumbLink0.getFamily());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.setParent(breadCrumbLink0);
      BreadCrumbLink breadCrumbLink1 = breadCrumbLink0.getParent();
      assertFalse(breadCrumbLink1.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      String string0 = breadCrumbLink0.getParentKey();
      assertNotNull(string0);
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.getUrl();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.getParent();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BreadCrumbLink breadCrumbLink0 = new BreadCrumbLink((String) null, "~AxYJ#%FEYQY72kG", false, "~AxYJ#%FEYQY72kG");
      breadCrumbLink0.setParentKey("");
      breadCrumbLink0.getParentKey();
      assertFalse(breadCrumbLink0.isCurrentPage());
  }
}
