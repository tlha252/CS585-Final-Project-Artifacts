package dummiesmind.breadcrumb.springmvc.thirty_seconds;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        Class<?> wildcardClass11 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        Class<?> wildcardClass1 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Class<?> wildcardClass5 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        Class<?> wildcardClass15 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        Class<?> wildcardClass11 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str16 = breadCrumbLink15.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink8.setCurrentPage(false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest20, httpServletResponse21, (Object) '#', exception23);
        Class<?> wildcardClass25 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink8.getPrevious();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        Class<?> wildcardClass11 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink8.setFamily("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        boolean boolean11 = breadCrumbLink4.isCurrentPage();
        Class<?> wildcardClass12 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink9.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str16 = breadCrumbLink15.getFamily();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink16.setParentKey("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str9 = breadCrumbLink8.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList13 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList13);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str19 = breadCrumbLink18.getFamily();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        Class<?> wildcardClass16 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink11.getParent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        Class<?> wildcardClass9 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "hi!");
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink11.setParentKey("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        Class<?> wildcardClass25 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink5.setParentKey("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink9.setCurrentPage(true);
        Class<?> wildcardClass20 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str9 = breadCrumbLink8.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        Class<?> wildcardClass18 = breadCrumbLink15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str23 = breadCrumbLink22.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink22);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        String str32 = breadCrumbLink23.getFamily();
        Class<?> wildcardClass33 = breadCrumbLink23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink13.setLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        Class<?> wildcardClass17 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setLabel("");
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str23 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        boolean boolean26 = breadCrumbLink22.isCurrentPage();
        org.springframework.web.servlet.ModelAndView modelAndView27 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) boolean26, modelAndView27);
        javax.servlet.http.HttpServletRequest httpServletRequest29 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse30 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor31 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest32 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse33 = null;
        org.springframework.web.servlet.ModelAndView modelAndView35 = null;
        breadCrumbInterceptor31.postHandle(httpServletRequest32, httpServletResponse33, (Object) "", modelAndView35);
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        Object obj39 = null;
        org.springframework.web.servlet.ModelAndView modelAndView40 = null;
        breadCrumbInterceptor31.postHandle(httpServletRequest37, httpServletResponse38, obj39, modelAndView40);
        javax.servlet.http.HttpServletRequest httpServletRequest42 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse43 = null;
        org.springframework.web.servlet.ModelAndView modelAndView45 = null;
        breadCrumbInterceptor31.postHandle(httpServletRequest42, httpServletResponse43, (Object) false, modelAndView45);
        javax.servlet.http.HttpServletRequest httpServletRequest47 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse48 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink53.addNext(breadCrumbLink58);
        breadCrumbLink58.setUrl("hi!");
        breadCrumbLink58.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView64 = null;
        breadCrumbInterceptor31.postHandle(httpServletRequest47, httpServletResponse48, (Object) breadCrumbLink58, modelAndView64);
        org.springframework.web.servlet.ModelAndView modelAndView66 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest29, httpServletResponse30, (Object) httpServletRequest47, modelAndView66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        Class<?> wildcardClass34 = breadCrumbLinkList33.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        boolean boolean16 = breadCrumbLink4.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest20, httpServletResponse21, (Object) '#', exception23);
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        String str41 = breadCrumbLink31.getParentKey();
        breadCrumbLink31.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        breadCrumbLink48.setCurrentPage(true);
        boolean boolean57 = breadCrumbLink48.isCurrentPage();
        String str58 = breadCrumbLink48.getParentKey();
        breadCrumbLink48.setLabel("hi!");
        breadCrumbLink31.setParent(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = breadCrumbLink31.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView63 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest25, httpServletResponse26, (Object) breadCrumbLink62, modelAndView63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "hi!" + "'", str41.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "hi!" + "'", str58.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink62);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink27.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink41.setUrl("hi!");
        breadCrumbLink41.setParentKey("");
        breadCrumbLink41.setFamily("");
        breadCrumbLink27.addNext(breadCrumbLink41);
        String str50 = breadCrumbLink41.getFamily();
        Exception exception51 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink41, exception51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink8.setCurrentPage(true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink11.setUrl("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        Class<?> wildcardClass8 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        breadCrumbLink35.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        Class<?> wildcardClass11 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = null;
        breadCrumbLink9.setParent(breadCrumbLink22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink10.setLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean22 = breadCrumbLink21.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = null;
        breadCrumbLink21.setPrevious(breadCrumbLink23);
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str31 = breadCrumbLink30.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink30.getParent();
        breadCrumbLink21.setParent(breadCrumbLink32);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink38.addNext(breadCrumbLink43);
        breadCrumbLink38.setCurrentPage(true);
        boolean boolean47 = breadCrumbLink38.isCurrentPage();
        String str48 = breadCrumbLink38.getParentKey();
        breadCrumbLink38.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink55.addNext(breadCrumbLink60);
        breadCrumbLink55.setCurrentPage(true);
        boolean boolean64 = breadCrumbLink55.isCurrentPage();
        String str65 = breadCrumbLink55.getParentKey();
        breadCrumbLink55.setLabel("hi!");
        breadCrumbLink38.setParent(breadCrumbLink55);
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink32.addNext(breadCrumbLink55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "hi!" + "'", str65.equals("hi!"));
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        boolean boolean28 = breadCrumbLink21.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        String str30 = breadCrumbLink21.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        javax.servlet.http.HttpServletRequest httpServletRequest65 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse66 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink76 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink71.addNext(breadCrumbLink76);
        breadCrumbLink71.setCurrentPage(true);
        boolean boolean80 = breadCrumbLink71.isCurrentPage();
        String str81 = breadCrumbLink71.getParentKey();
        breadCrumbLink71.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink88 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink71.setParent(breadCrumbLink88);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink90 = breadCrumbLink71.getPrevious();
        Exception exception91 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest65, httpServletResponse66, (Object) breadCrumbLink90, exception91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "hi!" + "'", str81.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink90);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "");
        breadCrumbLink4.setParentKey("hi!");
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "");
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView27 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) breadCrumbLink26, modelAndView27);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink26.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        Class<?> wildcardClass16 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink16.setLabel("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        org.springframework.web.servlet.ModelAndView modelAndView20 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest17, httpServletResponse18, (Object) "", modelAndView20);
        Exception exception22 = null;
        breadCrumbInterceptor13.afterCompletion(httpServletRequest14, httpServletResponse15, (Object) breadCrumbInterceptor16, exception22);
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        Exception exception27 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest24, httpServletResponse25, (Object) 0L, exception27);
        javax.servlet.http.HttpServletRequest httpServletRequest29 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse30 = null;
        org.springframework.web.servlet.ModelAndView modelAndView32 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest29, httpServletResponse30, (Object) 1, modelAndView32);
        javax.servlet.http.HttpServletRequest httpServletRequest34 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse35 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getFamily();
        breadCrumbLink40.setUrl("");
        String str53 = breadCrumbLink40.getFamily();
        String str54 = breadCrumbLink40.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = breadCrumbLink59.getParent();
        breadCrumbLink40.setPrevious(breadCrumbLink59);
        Exception exception63 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest34, httpServletResponse35, (Object) breadCrumbLink40, exception63);
        org.springframework.web.servlet.ModelAndView modelAndView65 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbInterceptor16, modelAndView65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink61);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        Class<?> wildcardClass29 = breadCrumbLink18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        Class<?> wildcardClass11 = breadCrumbInterceptor3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        Class<?> wildcardClass15 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList65 = breadCrumbLink58.getNext();
        Class<?> wildcardClass66 = breadCrumbLink58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str20 = breadCrumbLink19.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setUrl("");
        String str22 = breadCrumbLink4.getFamily();
        String str23 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        Class<?> wildcardClass15 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        breadCrumbLink58.setUrl("");
        breadCrumbLink58.setFamily("hi!");
        breadCrumbLink58.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink9.setCurrentPage(true);
        String str20 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = breadCrumbLink9.getPrevious();
        String str22 = breadCrumbLink9.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "hi!" + "'", str22.equals("hi!"));
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        boolean boolean28 = breadCrumbLink21.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        breadCrumbLink21.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str23 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        boolean boolean26 = breadCrumbLink22.isCurrentPage();
        org.springframework.web.servlet.ModelAndView modelAndView27 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) boolean26, modelAndView27);
        javax.servlet.http.HttpServletRequest httpServletRequest29 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse30 = null;
        Exception exception32 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest29, httpServletResponse30, (Object) (short) 10, exception32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getParent();
        breadCrumbLink4.setLabel("");
        Class<?> wildcardClass13 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = breadCrumbLink22.isCurrentPage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink22);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("");
        String str30 = breadCrumbLink17.getUrl();
        breadCrumbLink17.setParentKey("");
        Exception exception33 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink17, exception33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        String str6 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink8.setFamily("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink27.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink58.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str72 = breadCrumbLink71.getParentKey();
        breadCrumbLink71.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink79 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str80 = breadCrumbLink79.getParentKey();
        breadCrumbLink79.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = breadCrumbLink79.getParent();
        breadCrumbLink71.setParent(breadCrumbLink83);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = breadCrumbLink71.getPrevious();
        breadCrumbLink63.setParent(breadCrumbLink71);
        breadCrumbLink71.setLabel("hi!");
        breadCrumbLink27.setPrevious(breadCrumbLink71);
        breadCrumbLink71.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!" + "'", str72.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "hi!" + "'", str80.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink85);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink19.setFamily("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) "hi!", exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink31.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = breadCrumbLink31.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink45.setUrl("hi!");
        breadCrumbLink45.setParentKey("");
        breadCrumbLink45.setFamily("");
        breadCrumbLink31.addNext(breadCrumbLink45);
        String str54 = breadCrumbLink45.getFamily();
        breadCrumbLink45.setLabel("");
        org.springframework.web.servlet.ModelAndView modelAndView57 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink22.setUrl("hi!");
        breadCrumbLink22.setParentKey("");
        breadCrumbLink22.setFamily("");
        breadCrumbLink22.setCurrentPage(false);
        breadCrumbLink22.setLabel("");
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink12.setPrevious(breadCrumbLink22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "hi!");
        Class<?> wildcardClass5 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean27 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = null;
        breadCrumbLink26.setPrevious(breadCrumbLink28);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink26.getPrevious();
        String str31 = breadCrumbLink26.getFamily();
        breadCrumbLink9.setPrevious(breadCrumbLink26);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink9.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        breadCrumbLink44.addNext(breadCrumbLink53);
        String str55 = breadCrumbLink44.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink31);
        breadCrumbLink4.setPrevious(breadCrumbLink31);
        String str43 = breadCrumbLink31.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = breadCrumbLink31.getParent();
        breadCrumbLink31.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink44);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str37 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        breadCrumbLink36.setCurrentPage(false);
        breadCrumbLink26.addNext(breadCrumbLink36);
        Class<?> wildcardClass43 = breadCrumbLink36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        Class<?> wildcardClass23 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean27 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = null;
        breadCrumbLink26.setPrevious(breadCrumbLink28);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink26.getPrevious();
        String str31 = breadCrumbLink26.getFamily();
        breadCrumbLink9.setPrevious(breadCrumbLink26);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink26.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink4.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setParentKey("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink49);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink12.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str16 = breadCrumbLink15.getFamily();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean15 = breadCrumbLink4.isCurrentPage();
        String str16 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str12 = breadCrumbLink11.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        breadCrumbLink27.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink27, modelAndView33);
        javax.servlet.http.HttpServletRequest httpServletRequest35 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse36 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor37 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        org.springframework.web.servlet.ModelAndView modelAndView44 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) "", modelAndView44);
        Exception exception46 = null;
        breadCrumbInterceptor37.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbInterceptor40, exception46);
        javax.servlet.http.HttpServletRequest httpServletRequest48 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse49 = null;
        Exception exception51 = null;
        breadCrumbInterceptor40.afterCompletion(httpServletRequest48, httpServletResponse49, (Object) 0L, exception51);
        javax.servlet.http.HttpServletRequest httpServletRequest53 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse54 = null;
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest53, httpServletResponse54, (Object) (byte) 100, modelAndView56);
        javax.servlet.http.HttpServletRequest httpServletRequest58 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse59 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink64.addNext(breadCrumbLink69);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = breadCrumbLink64.getPrevious();
        String str72 = breadCrumbLink64.getFamily();
        breadCrumbLink64.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink64.getPrevious();
        Exception exception76 = null;
        breadCrumbInterceptor40.afterCompletion(httpServletRequest58, httpServletResponse59, (Object) breadCrumbLink75, exception76);
        org.springframework.web.servlet.ModelAndView modelAndView78 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest35, httpServletResponse36, (Object) httpServletRequest58, modelAndView78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "" + "'", str72.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str6 = breadCrumbLink5.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink23.getParent();
        breadCrumbLink4.setPrevious(breadCrumbLink23);
        Class<?> wildcardClass27 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str12 = breadCrumbLink11.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setCurrentPage(true);
        Class<?> wildcardClass18 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        String str30 = breadCrumbLink18.getParentKey();
        String str31 = breadCrumbLink18.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList32 = breadCrumbLink18.getNext();
        breadCrumbLink18.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList32);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList17 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor18 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest19 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse20 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink25.getPrevious();
        String str33 = breadCrumbLink25.getFamily();
        breadCrumbLink25.setUrl("hi!");
        breadCrumbLink25.setFamily("");
        Exception exception38 = null;
        breadCrumbInterceptor18.afterCompletion(httpServletRequest19, httpServletResponse20, (Object) breadCrumbLink25, exception38);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        breadCrumbLink44.setCurrentPage(true);
        boolean boolean53 = breadCrumbLink44.isCurrentPage();
        String str54 = breadCrumbLink44.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList55 = breadCrumbLink44.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str61 = breadCrumbLink60.getParentKey();
        breadCrumbLink60.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = breadCrumbLink60.getParent();
        breadCrumbLink60.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList67 = breadCrumbLink60.getNext();
        breadCrumbLink44.setParent(breadCrumbLink60);
        breadCrumbLink25.setPrevious(breadCrumbLink60);
        breadCrumbLink9.addNext(breadCrumbLink60);
        breadCrumbLink9.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "" + "'", str54.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "hi!" + "'", str61.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList67);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        String str46 = breadCrumbLink42.getUrl();
        breadCrumbLink42.setFamily("");
        String str49 = breadCrumbLink42.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink13.setLabel("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = breadCrumbLink27.getPrevious();
        String str35 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = breadCrumbLink27.getPrevious();
        Exception exception39 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink38, exception39);
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink47.getPrevious();
        String str55 = breadCrumbLink47.getFamily();
        breadCrumbLink47.setUrl("hi!");
        breadCrumbLink47.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean65 = breadCrumbLink64.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = null;
        breadCrumbLink64.setPrevious(breadCrumbLink66);
        breadCrumbLink47.setParent(breadCrumbLink64);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str74 = breadCrumbLink73.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink73.getParent();
        breadCrumbLink64.setParent(breadCrumbLink75);
        org.springframework.web.servlet.ModelAndView modelAndView77 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink75, modelAndView77);
        javax.servlet.http.HttpServletRequest httpServletRequest79 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse80 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        breadCrumbLink85.setLabel("");
        Exception exception88 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest79, httpServletResponse80, (Object) "", exception88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        String str5 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = null;
        breadCrumbLink4.setParent(breadCrumbLink18);
        String str20 = breadCrumbLink4.getLabel();
        String str21 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        String str16 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = breadCrumbLink21.getPrevious();
        String str29 = breadCrumbLink21.getFamily();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink4.setFamily("hi!");
        breadCrumbLink4.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        String str36 = breadCrumbLink17.getFamily();
        Class<?> wildcardClass37 = breadCrumbLink17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setLabel("");
        Class<?> wildcardClass21 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str38 = breadCrumbLink37.getParentKey();
        breadCrumbLink31.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        breadCrumbLink44.setCurrentPage(true);
        boolean boolean53 = breadCrumbLink44.isCurrentPage();
        String str54 = breadCrumbLink44.getParentKey();
        breadCrumbLink44.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink44.setParent(breadCrumbLink61);
        breadCrumbLink44.setLabel("");
        String str65 = breadCrumbLink44.getFamily();
        breadCrumbLink31.addNext(breadCrumbLink44);
        org.springframework.web.servlet.ModelAndView modelAndView67 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) breadCrumbLink44, modelAndView67);
        breadCrumbLink44.setParentKey("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        String str15 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = breadCrumbLink25.getPrevious();
        breadCrumbLink25.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean35 = breadCrumbLink34.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = null;
        breadCrumbLink34.setPrevious(breadCrumbLink36);
        breadCrumbLink25.setPrevious(breadCrumbLink34);
        boolean boolean39 = breadCrumbLink25.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink25);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList41 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList41);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink31);
        breadCrumbLink4.setPrevious(breadCrumbLink31);
        String str43 = breadCrumbLink31.getUrl();
        breadCrumbLink31.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        org.springframework.web.servlet.ModelAndView modelAndView20 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest17, httpServletResponse18, (Object) "", modelAndView20);
        javax.servlet.http.HttpServletRequest httpServletRequest22 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse23 = null;
        org.springframework.web.servlet.ModelAndView modelAndView25 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest22, httpServletResponse23, (Object) 0, modelAndView25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink33.addNext(breadCrumbLink38);
        breadCrumbLink33.setCurrentPage(true);
        boolean boolean42 = breadCrumbLink33.isCurrentPage();
        String str43 = breadCrumbLink33.getParentKey();
        breadCrumbLink33.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink33.setParent(breadCrumbLink50);
        Exception exception52 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) breadCrumbLink50, exception52);
        String str54 = breadCrumbLink50.getFamily();
        breadCrumbLink50.setLabel("hi!");
        breadCrumbLink4.setPrevious(breadCrumbLink50);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList58 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "hi!" + "'", str43.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList58);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList52 = breadCrumbLink27.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList52);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str24 = breadCrumbLink23.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink23);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList22 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink32.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str41 = breadCrumbLink40.getParentKey();
        breadCrumbLink40.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str49 = breadCrumbLink48.getParentKey();
        breadCrumbLink48.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = breadCrumbLink48.getParent();
        breadCrumbLink40.setParent(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink40.getPrevious();
        breadCrumbLink32.setParent(breadCrumbLink40);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList56 = breadCrumbLink40.getNext();
        breadCrumbLink40.setUrl("hi!");
        breadCrumbLink40.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str66 = breadCrumbLink65.getParentKey();
        breadCrumbLink65.setLabel("hi!");
        boolean boolean69 = breadCrumbLink65.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList70 = breadCrumbLink65.getNext();
        String str71 = breadCrumbLink65.getLabel();
        breadCrumbLink40.setParent(breadCrumbLink65);
        breadCrumbLink9.addNext(breadCrumbLink65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "hi!" + "'", str41.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "hi!" + "'", str66.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "hi!" + "'", str71.equals("hi!"));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        breadCrumbLink9.setFamily("");
        Class<?> wildcardClass19 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = null;
        breadCrumbLink4.setParent(breadCrumbLink10);
        String str12 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList13 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList13);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList18 = breadCrumbLink16.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        boolean boolean49 = breadCrumbLink18.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink59.setUrl("hi!");
        breadCrumbLink59.setParentKey("");
        breadCrumbLink59.setFamily("");
        breadCrumbLink59.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = breadCrumbLink59.getParent();
        breadCrumbLink59.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList72 = breadCrumbLink59.getNext();
        breadCrumbLink59.setCurrentPage(true);
        breadCrumbLink18.addNext(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList72);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink11.setFamily("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setFamily("hi!");
        String str19 = breadCrumbLink9.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        Object obj40 = null;
        org.springframework.web.servlet.ModelAndView modelAndView41 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest38, httpServletResponse39, obj40, modelAndView41);
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor45 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest46 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse47 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor48 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest49 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse50 = null;
        org.springframework.web.servlet.ModelAndView modelAndView52 = null;
        breadCrumbInterceptor48.postHandle(httpServletRequest49, httpServletResponse50, (Object) "", modelAndView52);
        Exception exception54 = null;
        breadCrumbInterceptor45.afterCompletion(httpServletRequest46, httpServletResponse47, (Object) breadCrumbInterceptor48, exception54);
        javax.servlet.http.HttpServletRequest httpServletRequest56 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse57 = null;
        Exception exception59 = null;
        breadCrumbInterceptor48.afterCompletion(httpServletRequest56, httpServletResponse57, (Object) 0L, exception59);
        javax.servlet.http.HttpServletRequest httpServletRequest61 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse62 = null;
        org.springframework.web.servlet.ModelAndView modelAndView64 = null;
        breadCrumbInterceptor48.postHandle(httpServletRequest61, httpServletResponse62, (Object) 1, modelAndView64);
        Class<?> wildcardClass66 = breadCrumbInterceptor48.getClass();
        org.springframework.web.servlet.ModelAndView modelAndView67 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest43, httpServletResponse44, (Object) breadCrumbInterceptor48, modelAndView67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList9 = breadCrumbLink4.getNext();
        String str10 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        String str5 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str11 = breadCrumbLink10.getParentKey();
        breadCrumbLink10.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor14 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest15 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse16 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str33 = breadCrumbLink32.getParentKey();
        breadCrumbLink26.addNext(breadCrumbLink32);
        org.springframework.web.servlet.ModelAndView modelAndView35 = null;
        breadCrumbInterceptor14.postHandle(httpServletRequest15, httpServletResponse16, (Object) breadCrumbLink32, modelAndView35);
        breadCrumbLink10.addNext(breadCrumbLink32);
        String str38 = breadCrumbLink10.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        breadCrumbLink43.setCurrentPage(true);
        boolean boolean52 = breadCrumbLink43.isCurrentPage();
        String str53 = breadCrumbLink43.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList54 = breadCrumbLink43.getNext();
        String str55 = breadCrumbLink43.getUrl();
        breadCrumbLink10.setPrevious(breadCrumbLink43);
        breadCrumbLink10.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = breadCrumbLink10.getPrevious();
        breadCrumbLink4.setPrevious(breadCrumbLink59);
        breadCrumbLink4.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink59);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink6.setCurrentPage(false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink6);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        String str36 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        String str5 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str11 = breadCrumbLink10.getParentKey();
        breadCrumbLink10.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor14 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest15 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse16 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str33 = breadCrumbLink32.getParentKey();
        breadCrumbLink26.addNext(breadCrumbLink32);
        org.springframework.web.servlet.ModelAndView modelAndView35 = null;
        breadCrumbInterceptor14.postHandle(httpServletRequest15, httpServletResponse16, (Object) breadCrumbLink32, modelAndView35);
        breadCrumbLink10.addNext(breadCrumbLink32);
        String str38 = breadCrumbLink10.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        breadCrumbLink43.setCurrentPage(true);
        boolean boolean52 = breadCrumbLink43.isCurrentPage();
        String str53 = breadCrumbLink43.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList54 = breadCrumbLink43.getNext();
        String str55 = breadCrumbLink43.getUrl();
        breadCrumbLink10.setPrevious(breadCrumbLink43);
        breadCrumbLink10.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = breadCrumbLink10.getPrevious();
        breadCrumbLink4.setPrevious(breadCrumbLink59);
        String str61 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean22 = breadCrumbLink21.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = null;
        breadCrumbLink21.setPrevious(breadCrumbLink23);
        breadCrumbLink4.setParent(breadCrumbLink21);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList26 = breadCrumbLink21.getNext();
        Class<?> wildcardClass27 = breadCrumbLinkList26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str30 = breadCrumbLink29.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink29.getParent();
        breadCrumbLink21.addNext(breadCrumbLink29);
        breadCrumbLink21.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        Object obj40 = null;
        org.springframework.web.servlet.ModelAndView modelAndView41 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest38, httpServletResponse39, obj40, modelAndView41);
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        breadCrumbLink49.setCurrentPage(true);
        String str58 = breadCrumbLink49.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList59 = breadCrumbLink49.getNext();
        Exception exception60 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest43, httpServletResponse44, (Object) breadCrumbLinkList59, exception60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList59);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str13 = breadCrumbLink12.getParentKey();
        breadCrumbLink12.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink12.getParent();
        breadCrumbLink4.setParent(breadCrumbLink16);
        // The following exception was thrown during execution in test generation
        try {
            Class<?> wildcardClass18 = breadCrumbLink16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink9.setCurrentPage(true);
        String str20 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor21 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest22 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse23 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor24 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        org.springframework.web.servlet.ModelAndView modelAndView28 = null;
        breadCrumbInterceptor24.postHandle(httpServletRequest25, httpServletResponse26, (Object) "", modelAndView28);
        Exception exception30 = null;
        breadCrumbInterceptor21.afterCompletion(httpServletRequest22, httpServletResponse23, (Object) breadCrumbInterceptor24, exception30);
        javax.servlet.http.HttpServletRequest httpServletRequest32 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse33 = null;
        Exception exception35 = null;
        breadCrumbInterceptor24.afterCompletion(httpServletRequest32, httpServletResponse33, (Object) 0L, exception35);
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        org.springframework.web.servlet.ModelAndView modelAndView40 = null;
        breadCrumbInterceptor24.postHandle(httpServletRequest37, httpServletResponse38, (Object) 1, modelAndView40);
        javax.servlet.http.HttpServletRequest httpServletRequest42 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse43 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        breadCrumbLink48.setCurrentPage(true);
        boolean boolean57 = breadCrumbLink48.isCurrentPage();
        String str58 = breadCrumbLink48.getFamily();
        breadCrumbLink48.setUrl("");
        String str61 = breadCrumbLink48.getFamily();
        String str62 = breadCrumbLink48.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str68 = breadCrumbLink67.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = breadCrumbLink67.getParent();
        breadCrumbLink48.setPrevious(breadCrumbLink67);
        Exception exception71 = null;
        breadCrumbInterceptor24.afterCompletion(httpServletRequest42, httpServletResponse43, (Object) breadCrumbLink48, exception71);
        String str73 = breadCrumbLink48.getFamily();
        breadCrumbLink9.setParent(breadCrumbLink48);
        String str75 = breadCrumbLink48.getLabel();
        breadCrumbLink48.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "" + "'", str75.equals(""));
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        Class<?> wildcardClass9 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getParentKey();
        Class<?> wildcardClass12 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) "hi!", exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor22 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest23 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse24 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor25 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest26 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse27 = null;
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor25.postHandle(httpServletRequest26, httpServletResponse27, (Object) "", modelAndView29);
        Exception exception31 = null;
        breadCrumbInterceptor22.afterCompletion(httpServletRequest23, httpServletResponse24, (Object) breadCrumbInterceptor25, exception31);
        javax.servlet.http.HttpServletRequest httpServletRequest33 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse34 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor35 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink42.addNext(breadCrumbLink47);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str54 = breadCrumbLink53.getParentKey();
        breadCrumbLink47.addNext(breadCrumbLink53);
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor35.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink53, modelAndView56);
        org.springframework.web.servlet.ModelAndView modelAndView58 = null;
        breadCrumbInterceptor22.postHandle(httpServletRequest33, httpServletResponse34, (Object) breadCrumbLink53, modelAndView58);
        javax.servlet.http.HttpServletRequest httpServletRequest60 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse61 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor62 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest63 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse64 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink74 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink69.addNext(breadCrumbLink74);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str81 = breadCrumbLink80.getParentKey();
        breadCrumbLink74.addNext(breadCrumbLink80);
        org.springframework.web.servlet.ModelAndView modelAndView83 = null;
        breadCrumbInterceptor62.postHandle(httpServletRequest63, httpServletResponse64, (Object) breadCrumbLink80, modelAndView83);
        Exception exception85 = null;
        breadCrumbInterceptor22.afterCompletion(httpServletRequest60, httpServletResponse61, (Object) breadCrumbLink80, exception85);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList87 = breadCrumbLink80.getNext();
        Exception exception88 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest20, httpServletResponse21, (Object) breadCrumbLink80, exception88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "hi!" + "'", str81.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList87);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        breadCrumbLink9.setCurrentPage(false);
        breadCrumbLink9.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        boolean boolean46 = breadCrumbLink42.isCurrentPage();
        breadCrumbLink42.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("");
        breadCrumbLink4.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList65 = breadCrumbLink58.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = breadCrumbLink58.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink66);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink9.setCurrentPage(true);
        String str20 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor21 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest22 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse23 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor24 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        org.springframework.web.servlet.ModelAndView modelAndView28 = null;
        breadCrumbInterceptor24.postHandle(httpServletRequest25, httpServletResponse26, (Object) "", modelAndView28);
        Exception exception30 = null;
        breadCrumbInterceptor21.afterCompletion(httpServletRequest22, httpServletResponse23, (Object) breadCrumbInterceptor24, exception30);
        javax.servlet.http.HttpServletRequest httpServletRequest32 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse33 = null;
        Exception exception35 = null;
        breadCrumbInterceptor24.afterCompletion(httpServletRequest32, httpServletResponse33, (Object) 0L, exception35);
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        org.springframework.web.servlet.ModelAndView modelAndView40 = null;
        breadCrumbInterceptor24.postHandle(httpServletRequest37, httpServletResponse38, (Object) 1, modelAndView40);
        javax.servlet.http.HttpServletRequest httpServletRequest42 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse43 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        breadCrumbLink48.setCurrentPage(true);
        boolean boolean57 = breadCrumbLink48.isCurrentPage();
        String str58 = breadCrumbLink48.getFamily();
        breadCrumbLink48.setUrl("");
        String str61 = breadCrumbLink48.getFamily();
        String str62 = breadCrumbLink48.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str68 = breadCrumbLink67.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = breadCrumbLink67.getParent();
        breadCrumbLink48.setPrevious(breadCrumbLink67);
        Exception exception71 = null;
        breadCrumbInterceptor24.afterCompletion(httpServletRequest42, httpServletResponse43, (Object) breadCrumbLink48, exception71);
        String str73 = breadCrumbLink48.getFamily();
        breadCrumbLink9.setParent(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = null;
        breadCrumbLink48.setParent(breadCrumbLink75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "" + "'", str58.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink18.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = breadCrumbLink29.isCurrentPage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = breadCrumbLink5.getParent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setCurrentPage(true);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean57 = breadCrumbLink27.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) "hi!", exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink31.setUrl("hi!");
        breadCrumbLink31.setParentKey("");
        breadCrumbLink31.setFamily("");
        breadCrumbLink31.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView41 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) false, modelAndView41);
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor45 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest46 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse47 = null;
        org.springframework.web.servlet.ModelAndView modelAndView49 = null;
        breadCrumbInterceptor45.postHandle(httpServletRequest46, httpServletResponse47, (Object) "", modelAndView49);
        javax.servlet.http.HttpServletRequest httpServletRequest51 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse52 = null;
        Object obj53 = null;
        org.springframework.web.servlet.ModelAndView modelAndView54 = null;
        breadCrumbInterceptor45.postHandle(httpServletRequest51, httpServletResponse52, obj53, modelAndView54);
        javax.servlet.http.HttpServletRequest httpServletRequest56 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse57 = null;
        org.springframework.web.servlet.ModelAndView modelAndView59 = null;
        breadCrumbInterceptor45.postHandle(httpServletRequest56, httpServletResponse57, (Object) false, modelAndView59);
        javax.servlet.http.HttpServletRequest httpServletRequest61 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse62 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str68 = breadCrumbLink67.getParentKey();
        breadCrumbLink67.setLabel("hi!");
        boolean boolean71 = breadCrumbLink67.isCurrentPage();
        org.springframework.web.servlet.ModelAndView modelAndView72 = null;
        breadCrumbInterceptor45.postHandle(httpServletRequest61, httpServletResponse62, (Object) boolean71, modelAndView72);
        javax.servlet.http.HttpServletRequest httpServletRequest74 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse75 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink80.addNext(breadCrumbLink85);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = breadCrumbLink80.getPrevious();
        String str88 = breadCrumbLink80.getFamily();
        breadCrumbLink80.setUrl("hi!");
        Exception exception91 = null;
        breadCrumbInterceptor45.afterCompletion(httpServletRequest74, httpServletResponse75, (Object) "hi!", exception91);
        org.springframework.web.servlet.ModelAndView modelAndView93 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest43, httpServletResponse44, (Object) httpServletRequest74, modelAndView93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "hi!" + "'", str68.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "" + "'", str88.equals(""));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str13 = breadCrumbLink12.getFamily();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = breadCrumbLink6.getPrevious();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink6);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink23.getParent();
        breadCrumbLink4.setPrevious(breadCrumbLink23);
        breadCrumbLink4.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink27.getNext();
        boolean boolean54 = breadCrumbLink27.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList25 = breadCrumbLink12.getNext();
        breadCrumbLink12.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        breadCrumbLink32.setCurrentPage(true);
        boolean boolean41 = breadCrumbLink32.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        breadCrumbLink32.setPrevious(breadCrumbLink46);
        String str57 = breadCrumbLink46.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = breadCrumbLink46.getParent();
        breadCrumbLink12.addNext(breadCrumbLink46);
        breadCrumbLink46.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink58);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink44.getPrevious();
        breadCrumbLink21.addNext(breadCrumbLink46);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink21.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str49 = breadCrumbLink48.getFamily();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        boolean boolean28 = breadCrumbLink21.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink36.getPrevious();
        String str44 = breadCrumbLink36.getFamily();
        breadCrumbLink36.setUrl("hi!");
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean54 = breadCrumbLink53.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = null;
        breadCrumbLink53.setPrevious(breadCrumbLink55);
        breadCrumbLink36.setParent(breadCrumbLink53);
        breadCrumbLink21.setParent(breadCrumbLink53);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList59 = breadCrumbLink53.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = breadCrumbLink53.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink60);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        String str36 = breadCrumbLink17.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = breadCrumbLink17.getPrevious();
        breadCrumbLink17.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink37);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink26.setCurrentPage(true);
        boolean boolean35 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink26.setPrevious(breadCrumbLink40);
        String str51 = breadCrumbLink40.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = breadCrumbLink40.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = breadCrumbLink57.getPrevious();
        String str65 = breadCrumbLink57.getFamily();
        breadCrumbLink57.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = breadCrumbLink57.getParent();
        String str69 = breadCrumbLink57.getLabel();
        breadCrumbLink40.addNext(breadCrumbLink57);
        boolean boolean71 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink9.setPrevious(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = breadCrumbLink40.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink73);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink22.setUrl("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink22);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink31);
        breadCrumbLink4.setPrevious(breadCrumbLink31);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink4.getPrevious();
        breadCrumbLink43.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList46 = breadCrumbLink43.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList46);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink15.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor20 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor23 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        org.springframework.web.servlet.ModelAndView modelAndView27 = null;
        breadCrumbInterceptor23.postHandle(httpServletRequest24, httpServletResponse25, (Object) "", modelAndView27);
        Exception exception29 = null;
        breadCrumbInterceptor20.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbInterceptor23, exception29);
        javax.servlet.http.HttpServletRequest httpServletRequest31 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse32 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor33 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest34 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse35 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str52 = breadCrumbLink51.getParentKey();
        breadCrumbLink45.addNext(breadCrumbLink51);
        org.springframework.web.servlet.ModelAndView modelAndView54 = null;
        breadCrumbInterceptor33.postHandle(httpServletRequest34, httpServletResponse35, (Object) breadCrumbLink51, modelAndView54);
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor20.postHandle(httpServletRequest31, httpServletResponse32, (Object) breadCrumbLink51, modelAndView56);
        javax.servlet.http.HttpServletRequest httpServletRequest58 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse59 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor60 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest61 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse62 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink67.addNext(breadCrumbLink72);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str79 = breadCrumbLink78.getParentKey();
        breadCrumbLink72.addNext(breadCrumbLink78);
        org.springframework.web.servlet.ModelAndView modelAndView81 = null;
        breadCrumbInterceptor60.postHandle(httpServletRequest61, httpServletResponse62, (Object) breadCrumbLink78, modelAndView81);
        Exception exception83 = null;
        breadCrumbInterceptor20.afterCompletion(httpServletRequest58, httpServletResponse59, (Object) breadCrumbLink78, exception83);
        breadCrumbLink78.setUrl("");
        breadCrumbLink15.setParent(breadCrumbLink78);
        Class<?> wildcardClass88 = breadCrumbLink15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "hi!" + "'", str52.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "hi!" + "'", str79.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink44.getPrevious();
        String str52 = breadCrumbLink44.getFamily();
        breadCrumbLink44.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink59.addNext(breadCrumbLink64);
        breadCrumbLink64.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str73 = breadCrumbLink72.getParentKey();
        breadCrumbLink72.setLabel("hi!");
        breadCrumbLink64.addNext(breadCrumbLink72);
        breadCrumbLink44.setPrevious(breadCrumbLink72);
        org.springframework.web.servlet.ModelAndView modelAndView78 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink44, modelAndView78);
        Class<?> wildcardClass80 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        breadCrumbLink16.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = breadCrumbLink16.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink33.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink33);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        String str9 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink4.setFamily("");
        breadCrumbLink4.setParentKey("hi!");
        String str9 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getParent();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList11 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList11);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setFamily("hi!");
        String str19 = breadCrumbLink9.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        String str46 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        breadCrumbLink36.setUrl("");
        breadCrumbLink9.addNext(breadCrumbLink36);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList52 = breadCrumbLink36.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList52);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink23.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink37.addNext(breadCrumbLink42);
        breadCrumbLink37.setCurrentPage(true);
        boolean boolean46 = breadCrumbLink37.isCurrentPage();
        String str47 = breadCrumbLink37.getParentKey();
        breadCrumbLink37.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink37.setParent(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink60.addNext(breadCrumbLink65);
        breadCrumbLink60.setCurrentPage(true);
        boolean boolean69 = breadCrumbLink60.isCurrentPage();
        String str70 = breadCrumbLink60.getParentKey();
        breadCrumbLink60.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink77 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink60.setParent(breadCrumbLink77);
        breadCrumbLink37.addNext(breadCrumbLink77);
        breadCrumbLink77.setUrl("");
        breadCrumbLink77.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink88 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str89 = breadCrumbLink88.getParentKey();
        breadCrumbLink88.setLabel("hi!");
        boolean boolean92 = breadCrumbLink88.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList93 = breadCrumbLink88.getNext();
        String str94 = breadCrumbLink88.getLabel();
        breadCrumbLink77.setPrevious(breadCrumbLink88);
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink32.setPrevious(breadCrumbLink77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "hi!" + "'", str70.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "hi!" + "'", str89.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str94 + "' != '" + "hi!" + "'", str94.equals("hi!"));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList13 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList13);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList17 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        breadCrumbLink22.setPrevious(breadCrumbLink36);
        String str47 = breadCrumbLink36.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        breadCrumbLink54.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink49);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getFamily();
        String str17 = breadCrumbLink9.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        String str17 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getPrevious();
        Class<?> wildcardClass19 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        breadCrumbLink44.addNext(breadCrumbLink53);
        String str55 = breadCrumbLink53.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink21.setCurrentPage(true);
        boolean boolean30 = breadCrumbLink21.isCurrentPage();
        String str31 = breadCrumbLink21.getParentKey();
        breadCrumbLink21.setLabel("hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = breadCrumbLink21.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink35);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink18.getParent();
        boolean boolean32 = breadCrumbLink18.isCurrentPage();
        boolean boolean33 = breadCrumbLink18.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList65 = breadCrumbLink58.getNext();
        breadCrumbLink58.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList65);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        String str11 = breadCrumbLink4.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList13 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList13);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setCurrentPage(false);
        String str9 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = breadCrumbLink4.getPrevious();
        Class<?> wildcardClass15 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink11.setLabel("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        String str16 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str22 = breadCrumbLink21.getUrl();
        breadCrumbLink21.setFamily("hi!");
        breadCrumbLink9.setParent(breadCrumbLink21);
        breadCrumbLink9.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        String str49 = breadCrumbLink35.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        String str64 = breadCrumbLink54.getParentKey();
        breadCrumbLink54.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink54.setParent(breadCrumbLink71);
        breadCrumbLink71.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink71.getParent();
        breadCrumbLink35.addNext(breadCrumbLink75);
        // The following exception was thrown during execution in test generation
        try {
            Class<?> wildcardClass77 = breadCrumbLink75.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "hi!" + "'", str64.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        breadCrumbLink27.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView39 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView39);
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        Object obj43 = null;
        Exception exception44 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest41, httpServletResponse42, obj43, exception44);
        javax.servlet.http.HttpServletRequest httpServletRequest46 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse47 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = breadCrumbLink57.getPrevious();
        breadCrumbLink57.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean67 = breadCrumbLink66.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = null;
        breadCrumbLink66.setPrevious(breadCrumbLink68);
        breadCrumbLink57.setPrevious(breadCrumbLink66);
        String str71 = breadCrumbLink66.getUrl();
        org.springframework.web.servlet.ModelAndView modelAndView72 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest46, httpServletResponse47, (Object) str71, modelAndView72);
        javax.servlet.http.HttpServletRequest httpServletRequest74 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse75 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink80.addNext(breadCrumbLink85);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = breadCrumbLink85.getPrevious();
        breadCrumbLink85.setParentKey("");
        breadCrumbLink85.setUrl("");
        String str92 = breadCrumbLink85.getUrl();
        org.springframework.web.servlet.ModelAndView modelAndView93 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest74, httpServletResponse75, (Object) str92, modelAndView93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink36.getPrevious();
        String str44 = breadCrumbLink36.getFamily();
        breadCrumbLink36.setUrl("hi!");
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink53.addNext(breadCrumbLink58);
        boolean boolean60 = breadCrumbLink53.isCurrentPage();
        breadCrumbLink36.setPrevious(breadCrumbLink53);
        breadCrumbLink53.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink68.addNext(breadCrumbLink73);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink68.getPrevious();
        String str76 = breadCrumbLink68.getFamily();
        breadCrumbLink68.setUrl("hi!");
        breadCrumbLink68.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean86 = breadCrumbLink85.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = null;
        breadCrumbLink85.setPrevious(breadCrumbLink87);
        breadCrumbLink68.setParent(breadCrumbLink85);
        breadCrumbLink53.setParent(breadCrumbLink85);
        breadCrumbLink26.setPrevious(breadCrumbLink85);
        String str92 = breadCrumbLink26.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        javax.servlet.http.HttpServletRequest httpServletRequest52 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse53 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink58.setLabel("hi!");
        breadCrumbLink58.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink68.addNext(breadCrumbLink73);
        breadCrumbLink73.setUrl("hi!");
        breadCrumbLink73.setParentKey("");
        breadCrumbLink73.setFamily("");
        String str81 = breadCrumbLink73.getFamily();
        breadCrumbLink58.addNext(breadCrumbLink73);
        breadCrumbLink58.setCurrentPage(true);
        Exception exception85 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest52, httpServletResponse53, (Object) true, exception85);
        javax.servlet.http.HttpServletRequest httpServletRequest87 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse88 = null;
        org.springframework.web.servlet.ModelAndView modelAndView90 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest87, httpServletResponse88, (Object) (short) 100, modelAndView90);
        javax.servlet.http.HttpServletRequest httpServletRequest92 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse93 = null;
        Object obj94 = null;
        Exception exception95 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest92, httpServletResponse93, obj94, exception95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "" + "'", str81.equals(""));
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink26.setCurrentPage(true);
        boolean boolean35 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink26.setPrevious(breadCrumbLink40);
        String str51 = breadCrumbLink40.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = breadCrumbLink40.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = breadCrumbLink57.getPrevious();
        String str65 = breadCrumbLink57.getFamily();
        breadCrumbLink57.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = breadCrumbLink57.getParent();
        String str69 = breadCrumbLink57.getLabel();
        breadCrumbLink40.addNext(breadCrumbLink57);
        boolean boolean71 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink9.setPrevious(breadCrumbLink40);
        breadCrumbLink9.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink26.setUrl("hi!");
        breadCrumbLink26.setParentKey("");
        breadCrumbLink26.setFamily("");
        breadCrumbLink26.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getParentKey();
        breadCrumbLink40.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink40.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink63.setCurrentPage(true);
        boolean boolean72 = breadCrumbLink63.isCurrentPage();
        String str73 = breadCrumbLink63.getParentKey();
        breadCrumbLink63.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink63.setParent(breadCrumbLink80);
        breadCrumbLink40.addNext(breadCrumbLink80);
        breadCrumbLink80.setUrl("");
        breadCrumbLink80.setFamily("");
        breadCrumbLink26.setPrevious(breadCrumbLink80);
        breadCrumbLink9.addNext(breadCrumbLink80);
        String str89 = breadCrumbLink9.getLabel();
        String str90 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink4.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink7);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink36.getPrevious();
        String str44 = breadCrumbLink36.getFamily();
        breadCrumbLink36.setUrl("hi!");
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink53.addNext(breadCrumbLink58);
        boolean boolean60 = breadCrumbLink53.isCurrentPage();
        breadCrumbLink36.setPrevious(breadCrumbLink53);
        breadCrumbLink53.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink68.addNext(breadCrumbLink73);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink68.getPrevious();
        String str76 = breadCrumbLink68.getFamily();
        breadCrumbLink68.setUrl("hi!");
        breadCrumbLink68.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean86 = breadCrumbLink85.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = null;
        breadCrumbLink85.setPrevious(breadCrumbLink87);
        breadCrumbLink68.setParent(breadCrumbLink85);
        breadCrumbLink53.setParent(breadCrumbLink85);
        breadCrumbLink26.setPrevious(breadCrumbLink85);
        breadCrumbLink85.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink42.addNext(breadCrumbLink47);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str54 = breadCrumbLink53.getParentKey();
        breadCrumbLink47.setParent(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = breadCrumbLink47.getParent();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList57 = breadCrumbLink56.getNext();
        breadCrumbLink34.setPrevious(breadCrumbLink56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList57);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            Class<?> wildcardClass6 = breadCrumbLink5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor23 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor26 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        org.springframework.web.servlet.ModelAndView modelAndView30 = null;
        breadCrumbInterceptor26.postHandle(httpServletRequest27, httpServletResponse28, (Object) "", modelAndView30);
        Exception exception32 = null;
        breadCrumbInterceptor23.afterCompletion(httpServletRequest24, httpServletResponse25, (Object) breadCrumbInterceptor26, exception32);
        javax.servlet.http.HttpServletRequest httpServletRequest34 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse35 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor36 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str55 = breadCrumbLink54.getParentKey();
        breadCrumbLink48.addNext(breadCrumbLink54);
        org.springframework.web.servlet.ModelAndView modelAndView57 = null;
        breadCrumbInterceptor36.postHandle(httpServletRequest37, httpServletResponse38, (Object) breadCrumbLink54, modelAndView57);
        org.springframework.web.servlet.ModelAndView modelAndView59 = null;
        breadCrumbInterceptor23.postHandle(httpServletRequest34, httpServletResponse35, (Object) breadCrumbLink54, modelAndView59);
        javax.servlet.http.HttpServletRequest httpServletRequest61 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse62 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor63 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest64 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse65 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink70.addNext(breadCrumbLink75);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink81 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str82 = breadCrumbLink81.getParentKey();
        breadCrumbLink75.addNext(breadCrumbLink81);
        org.springframework.web.servlet.ModelAndView modelAndView84 = null;
        breadCrumbInterceptor63.postHandle(httpServletRequest64, httpServletResponse65, (Object) breadCrumbLink81, modelAndView84);
        Exception exception86 = null;
        breadCrumbInterceptor23.afterCompletion(httpServletRequest61, httpServletResponse62, (Object) breadCrumbLink81, exception86);
        org.springframework.web.servlet.ModelAndView modelAndView88 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink81, modelAndView88);
        String str90 = breadCrumbLink81.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!" + "'", str82.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Object obj13 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest11, httpServletResponse12, obj13, modelAndView14);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        String str41 = breadCrumbLink31.getParentKey();
        breadCrumbLink31.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink31.setParent(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        String str64 = breadCrumbLink54.getParentKey();
        breadCrumbLink54.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink54.setParent(breadCrumbLink71);
        breadCrumbLink31.addNext(breadCrumbLink71);
        breadCrumbLink71.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        breadCrumbLink71.addNext(breadCrumbLink80);
        org.springframework.web.servlet.ModelAndView modelAndView82 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest25, httpServletResponse26, (Object) breadCrumbLink80, modelAndView82);
        boolean boolean84 = breadCrumbLink80.isCurrentPage();
        breadCrumbLink80.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "hi!" + "'", str41.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "hi!" + "'", str64.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink23.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink32.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        breadCrumbLink44.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str56 = breadCrumbLink55.getParentKey();
        breadCrumbLink55.setLabel("hi!");
        boolean boolean59 = breadCrumbLink55.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList60 = breadCrumbLink55.getNext();
        String str61 = breadCrumbLink55.getLabel();
        breadCrumbLink44.setPrevious(breadCrumbLink55);
        breadCrumbLink55.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "hi!" + "'", str61.equals("hi!"));
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList6 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList6);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        String str49 = breadCrumbLink35.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        String str64 = breadCrumbLink54.getParentKey();
        breadCrumbLink54.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink54.setParent(breadCrumbLink71);
        breadCrumbLink71.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink71.getParent();
        breadCrumbLink35.addNext(breadCrumbLink75);
        // The following exception was thrown during execution in test generation
        try {
            String str77 = breadCrumbLink75.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "hi!" + "'", str64.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink4.getPrevious();
        String str10 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink16.addNext(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink21.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink30.addNext(breadCrumbLink35);
        breadCrumbLink35.setUrl("hi!");
        breadCrumbLink35.setParentKey("");
        breadCrumbLink35.setFamily("");
        breadCrumbLink21.addNext(breadCrumbLink35);
        breadCrumbLink4.addNext(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink45);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        String str9 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink14.addNext(breadCrumbLink19);
        breadCrumbLink14.setCurrentPage(true);
        boolean boolean23 = breadCrumbLink14.isCurrentPage();
        breadCrumbLink14.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor26 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor29 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest30 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse31 = null;
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor29.postHandle(httpServletRequest30, httpServletResponse31, (Object) "", modelAndView33);
        Exception exception35 = null;
        breadCrumbInterceptor26.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) breadCrumbInterceptor29, exception35);
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception44 = null;
        breadCrumbInterceptor26.afterCompletion(httpServletRequest37, httpServletResponse38, (Object) false, exception44);
        javax.servlet.http.HttpServletRequest httpServletRequest46 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse47 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView53 = null;
        breadCrumbInterceptor26.postHandle(httpServletRequest46, httpServletResponse47, (Object) breadCrumbLink52, modelAndView53);
        breadCrumbLink14.setParent(breadCrumbLink52);
        String str56 = breadCrumbLink52.getUrl();
        breadCrumbLink52.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink63.setCurrentPage(true);
        boolean boolean72 = breadCrumbLink63.isCurrentPage();
        String str73 = breadCrumbLink63.getFamily();
        breadCrumbLink63.setUrl("");
        String str76 = breadCrumbLink63.getFamily();
        String str77 = breadCrumbLink63.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink82 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str83 = breadCrumbLink82.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink84 = breadCrumbLink82.getParent();
        breadCrumbLink63.setPrevious(breadCrumbLink82);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink86 = breadCrumbLink63.getPrevious();
        breadCrumbLink52.setParent(breadCrumbLink86);
        String str88 = breadCrumbLink86.getLabel();
        breadCrumbLink4.addNext(breadCrumbLink86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "" + "'", str77.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "" + "'", str88.equals(""));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink21.getParent();
        breadCrumbLink21.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink10.addNext(breadCrumbLink15);
        breadCrumbLink10.setCurrentPage(true);
        boolean boolean19 = breadCrumbLink10.isCurrentPage();
        String str20 = breadCrumbLink10.getParentKey();
        breadCrumbLink10.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink10.setParent(breadCrumbLink27);
        breadCrumbLink4.addNext(breadCrumbLink27);
        String str30 = breadCrumbLink27.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        breadCrumbLink27.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink27, modelAndView33);
        String str35 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink45.setUrl("hi!");
        breadCrumbLink27.setPrevious(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = breadCrumbLink45.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink50);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        boolean boolean42 = breadCrumbLink35.isCurrentPage();
        breadCrumbLink19.setPrevious(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getParentKey();
        breadCrumbLink53.addNext(breadCrumbLink59);
        breadCrumbLink19.setPrevious(breadCrumbLink59);
        breadCrumbLink59.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str70 = breadCrumbLink69.getFamily();
        String str71 = breadCrumbLink69.getFamily();
        breadCrumbLink69.setParentKey("");
        breadCrumbLink59.setParent(breadCrumbLink69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "hi!" + "'", str60.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str9 = breadCrumbLink8.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str11 = breadCrumbLink10.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        org.springframework.web.servlet.ModelAndView modelAndView17 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) "", modelAndView17);
        javax.servlet.http.HttpServletRequest httpServletRequest19 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse20 = null;
        Object obj21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView22 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest19, httpServletResponse20, obj21, modelAndView22);
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        org.springframework.web.servlet.ModelAndView modelAndView27 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest24, httpServletResponse25, (Object) false, modelAndView27);
        javax.servlet.http.HttpServletRequest httpServletRequest29 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse30 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str36 = breadCrumbLink35.getParentKey();
        breadCrumbLink35.setLabel("hi!");
        boolean boolean39 = breadCrumbLink35.isCurrentPage();
        org.springframework.web.servlet.ModelAndView modelAndView40 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest29, httpServletResponse30, (Object) boolean39, modelAndView40);
        org.springframework.web.servlet.ModelAndView modelAndView42 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) boolean39, modelAndView42);
        javax.servlet.http.HttpServletRequest httpServletRequest44 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse45 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink50.addNext(breadCrumbLink55);
        breadCrumbLink50.setCurrentPage(true);
        boolean boolean59 = breadCrumbLink50.isCurrentPage();
        String str60 = breadCrumbLink50.getFamily();
        breadCrumbLink50.setUrl("");
        String str63 = breadCrumbLink50.getUrl();
        breadCrumbLink50.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink70.addNext(breadCrumbLink75);
        breadCrumbLink75.setUrl("hi!");
        breadCrumbLink75.setCurrentPage(true);
        breadCrumbLink50.setPrevious(breadCrumbLink75);
        Exception exception82 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest44, httpServletResponse45, (Object) breadCrumbLink75, exception82);
        boolean boolean84 = breadCrumbLink75.isCurrentPage();
        breadCrumbLink75.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        String str32 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink37.addNext(breadCrumbLink42);
        breadCrumbLink37.setCurrentPage(true);
        boolean boolean46 = breadCrumbLink37.isCurrentPage();
        String str47 = breadCrumbLink37.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList48 = breadCrumbLink37.getNext();
        String str49 = breadCrumbLink37.getUrl();
        breadCrumbLink4.setPrevious(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = breadCrumbLink51.isCurrentPage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink51);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            String str16 = breadCrumbLink15.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        String str31 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        javax.servlet.http.HttpServletRequest httpServletRequest52 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse53 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink58.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str72 = breadCrumbLink71.getParentKey();
        breadCrumbLink71.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink79 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str80 = breadCrumbLink79.getParentKey();
        breadCrumbLink79.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = breadCrumbLink79.getParent();
        breadCrumbLink71.setParent(breadCrumbLink83);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = breadCrumbLink71.getPrevious();
        breadCrumbLink63.setParent(breadCrumbLink71);
        org.springframework.web.servlet.ModelAndView modelAndView87 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest52, httpServletResponse53, (Object) breadCrumbLink71, modelAndView87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!" + "'", str72.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "hi!" + "'", str80.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink85);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink11.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList22 = breadCrumbLink9.getNext();
        breadCrumbLink9.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str26 = breadCrumbLink25.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        String str5 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str11 = breadCrumbLink10.getParentKey();
        breadCrumbLink10.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor14 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest15 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse16 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str33 = breadCrumbLink32.getParentKey();
        breadCrumbLink26.addNext(breadCrumbLink32);
        org.springframework.web.servlet.ModelAndView modelAndView35 = null;
        breadCrumbInterceptor14.postHandle(httpServletRequest15, httpServletResponse16, (Object) breadCrumbLink32, modelAndView35);
        breadCrumbLink10.addNext(breadCrumbLink32);
        String str38 = breadCrumbLink10.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        breadCrumbLink43.setCurrentPage(true);
        boolean boolean52 = breadCrumbLink43.isCurrentPage();
        String str53 = breadCrumbLink43.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList54 = breadCrumbLink43.getNext();
        String str55 = breadCrumbLink43.getUrl();
        breadCrumbLink10.setPrevious(breadCrumbLink43);
        breadCrumbLink10.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = breadCrumbLink10.getPrevious();
        breadCrumbLink4.setPrevious(breadCrumbLink59);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str66 = breadCrumbLink65.getFamily();
        String str67 = breadCrumbLink65.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink77 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink72.addNext(breadCrumbLink77);
        breadCrumbLink77.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str86 = breadCrumbLink85.getParentKey();
        breadCrumbLink85.setLabel("hi!");
        breadCrumbLink77.addNext(breadCrumbLink85);
        boolean boolean90 = breadCrumbLink77.isCurrentPage();
        breadCrumbLink65.setParent(breadCrumbLink77);
        breadCrumbLink4.addNext(breadCrumbLink77);
        String str93 = breadCrumbLink77.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "hi!" + "'", str86.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str93 + "' != '" + "" + "'", str93.equals(""));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) true, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str23 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str31 = breadCrumbLink30.getParentKey();
        breadCrumbLink30.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = breadCrumbLink30.getParent();
        breadCrumbLink22.setParent(breadCrumbLink34);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink22.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView37 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink22, modelAndView37);
        javax.servlet.http.HttpServletRequest httpServletRequest39 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse40 = null;
        Exception exception42 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest39, httpServletResponse40, (Object) 0, exception42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink25.getPrevious();
        String str33 = breadCrumbLink25.getFamily();
        breadCrumbLink25.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink40.getPrevious();
        String str48 = breadCrumbLink40.getFamily();
        breadCrumbLink40.setUrl("hi!");
        breadCrumbLink25.addNext(breadCrumbLink40);
        breadCrumbLink12.setPrevious(breadCrumbLink40);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink12.getPrevious();
        Exception exception55 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception55);
        javax.servlet.http.HttpServletRequest httpServletRequest57 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse58 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink68.setUrl("hi!");
        breadCrumbLink68.setParentKey("");
        String str74 = breadCrumbLink68.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList75 = breadCrumbLink68.getNext();
        String str76 = breadCrumbLink68.getUrl();
        Exception exception77 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest57, httpServletResponse58, (Object) str76, exception77);
        javax.servlet.http.HttpServletRequest httpServletRequest79 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse80 = null;
        org.springframework.web.servlet.ModelAndView modelAndView82 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest79, httpServletResponse80, (Object) (byte) -1, modelAndView82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink22.setParentKey("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink22);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList17 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        breadCrumbLink22.setPrevious(breadCrumbLink36);
        String str47 = breadCrumbLink36.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink36);
        Class<?> wildcardClass49 = breadCrumbLink36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        String str7 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getFamily();
        String str12 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean28 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = null;
        breadCrumbLink27.setPrevious(breadCrumbLink29);
        boolean boolean31 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink27.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView33);
        javax.servlet.http.HttpServletRequest httpServletRequest35 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse36 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink41.addNext(breadCrumbLink46);
        breadCrumbLink41.setCurrentPage(true);
        boolean boolean50 = breadCrumbLink41.isCurrentPage();
        String str51 = breadCrumbLink41.getParentKey();
        String str52 = breadCrumbLink41.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = null;
        breadCrumbLink41.setPrevious(breadCrumbLink53);
        String str55 = breadCrumbLink41.getLabel();
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest35, httpServletResponse36, (Object) str55, modelAndView56);
        Class<?> wildcardClass58 = breadCrumbInterceptor3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "hi!");
        breadCrumbLink4.setLabel("");
        breadCrumbLink4.setUrl("hi!");
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = null;
        breadCrumbLink4.setParent(breadCrumbLink18);
        String str20 = breadCrumbLink4.getLabel();
        String str21 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean28 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = null;
        breadCrumbLink27.setPrevious(breadCrumbLink29);
        boolean boolean31 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink27.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView33);
        javax.servlet.http.HttpServletRequest httpServletRequest35 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse36 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink41.addNext(breadCrumbLink46);
        breadCrumbLink41.setCurrentPage(true);
        boolean boolean50 = breadCrumbLink41.isCurrentPage();
        String str51 = breadCrumbLink41.getParentKey();
        String str52 = breadCrumbLink41.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = null;
        breadCrumbLink41.setPrevious(breadCrumbLink53);
        String str55 = breadCrumbLink41.getLabel();
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest35, httpServletResponse36, (Object) str55, modelAndView56);
        javax.servlet.http.HttpServletRequest httpServletRequest58 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse59 = null;
        Object obj60 = null;
        Exception exception61 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest58, httpServletResponse59, obj60, exception61);
        javax.servlet.http.HttpServletRequest httpServletRequest63 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse64 = null;
        Object obj65 = null;
        org.springframework.web.servlet.ModelAndView modelAndView66 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest63, httpServletResponse64, obj65, modelAndView66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList17 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        breadCrumbLink22.setPrevious(breadCrumbLink36);
        String str47 = breadCrumbLink36.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink36);
        boolean boolean49 = breadCrumbLink36.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        String str16 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = breadCrumbLink21.getPrevious();
        String str29 = breadCrumbLink21.getFamily();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        String str13 = breadCrumbLink4.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList14 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList14);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        breadCrumbLink27.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink27, modelAndView33);
        javax.servlet.http.HttpServletRequest httpServletRequest35 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse36 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean42 = breadCrumbLink41.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = null;
        breadCrumbLink41.setPrevious(breadCrumbLink43);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = breadCrumbLink41.getPrevious();
        String str46 = breadCrumbLink41.getFamily();
        Exception exception47 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest35, httpServletResponse36, (Object) breadCrumbLink41, exception47);
        Class<?> wildcardClass49 = breadCrumbLink41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        String str34 = breadCrumbLink17.getLabel();
        breadCrumbLink17.setCurrentPage(false);
        String str37 = breadCrumbLink17.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "hi!" + "'", str34.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean28 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = null;
        breadCrumbLink27.setPrevious(breadCrumbLink29);
        boolean boolean31 = breadCrumbLink27.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink27.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView33);
        javax.servlet.http.HttpServletRequest httpServletRequest35 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse36 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink41.addNext(breadCrumbLink46);
        breadCrumbLink41.setCurrentPage(true);
        boolean boolean50 = breadCrumbLink41.isCurrentPage();
        String str51 = breadCrumbLink41.getParentKey();
        String str52 = breadCrumbLink41.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = null;
        breadCrumbLink41.setPrevious(breadCrumbLink53);
        String str55 = breadCrumbLink41.getLabel();
        org.springframework.web.servlet.ModelAndView modelAndView56 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest35, httpServletResponse36, (Object) str55, modelAndView56);
        javax.servlet.http.HttpServletRequest httpServletRequest58 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse59 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink64.addNext(breadCrumbLink69);
        breadCrumbLink64.setCurrentPage(true);
        boolean boolean73 = breadCrumbLink64.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink78.addNext(breadCrumbLink83);
        breadCrumbLink78.setCurrentPage(true);
        boolean boolean87 = breadCrumbLink78.isCurrentPage();
        breadCrumbLink64.setPrevious(breadCrumbLink78);
        String str89 = breadCrumbLink78.getParentKey();
        breadCrumbLink78.setUrl("hi!");
        String str92 = breadCrumbLink78.getParentKey();
        Exception exception93 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest58, httpServletResponse59, (Object) breadCrumbLink78, exception93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "hi!" + "'", str89.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "hi!" + "'", str92.equals("hi!"));
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        String str9 = breadCrumbLink4.getLabel();
        String str10 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        breadCrumbLink20.setUrl("hi!");
        breadCrumbLink20.setParentKey("");
        String str26 = breadCrumbLink20.getParentKey();
        String str27 = breadCrumbLink20.getLabel();
        breadCrumbLink20.setFamily("");
        breadCrumbLink4.setParent(breadCrumbLink20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        String str36 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = breadCrumbLink27.getPrevious();
        String str35 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = breadCrumbLink27.getPrevious();
        Exception exception39 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink38, exception39);
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink47.getPrevious();
        String str55 = breadCrumbLink47.getFamily();
        breadCrumbLink47.setUrl("hi!");
        breadCrumbLink47.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean65 = breadCrumbLink64.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = null;
        breadCrumbLink64.setPrevious(breadCrumbLink66);
        breadCrumbLink47.setParent(breadCrumbLink64);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str74 = breadCrumbLink73.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink73.getParent();
        breadCrumbLink64.setParent(breadCrumbLink75);
        org.springframework.web.servlet.ModelAndView modelAndView77 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink75, modelAndView77);
        javax.servlet.http.HttpServletRequest httpServletRequest79 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse80 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean86 = breadCrumbLink85.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = null;
        breadCrumbLink85.setPrevious(breadCrumbLink87);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink89 = breadCrumbLink85.getPrevious();
        String str90 = breadCrumbLink85.getParentKey();
        org.springframework.web.servlet.ModelAndView modelAndView91 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest79, httpServletResponse80, (Object) str90, modelAndView91);
        javax.servlet.http.HttpServletRequest httpServletRequest93 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse94 = null;
        Object obj95 = null;
        org.springframework.web.servlet.ModelAndView modelAndView96 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest93, httpServletResponse94, obj95, modelAndView96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "" + "'", str55.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "hi!" + "'", str90.equals("hi!"));
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        breadCrumbLink4.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink26.setUrl("hi!");
        breadCrumbLink26.setParentKey("");
        breadCrumbLink26.setFamily("");
        breadCrumbLink26.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getParentKey();
        breadCrumbLink40.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink40.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink63.setCurrentPage(true);
        boolean boolean72 = breadCrumbLink63.isCurrentPage();
        String str73 = breadCrumbLink63.getParentKey();
        breadCrumbLink63.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink63.setParent(breadCrumbLink80);
        breadCrumbLink40.addNext(breadCrumbLink80);
        breadCrumbLink80.setUrl("");
        breadCrumbLink80.setFamily("");
        breadCrumbLink26.setPrevious(breadCrumbLink80);
        breadCrumbLink9.addNext(breadCrumbLink80);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink93 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean94 = breadCrumbLink93.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink95 = null;
        breadCrumbLink93.setPrevious(breadCrumbLink95);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink97 = breadCrumbLink93.getPrevious();
        String str98 = breadCrumbLink93.getFamily();
        breadCrumbLink80.setPrevious(breadCrumbLink93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "" + "'", str98.equals(""));
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setFamily("hi!");
        String str36 = breadCrumbLink17.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink10.addNext(breadCrumbLink15);
        breadCrumbLink15.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink31.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = breadCrumbLink31.getParent();
        breadCrumbLink23.setParent(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = breadCrumbLink23.getPrevious();
        breadCrumbLink15.setParent(breadCrumbLink23);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList39 = breadCrumbLink23.getNext();
        breadCrumbLink4.setParent(breadCrumbLink23);
        breadCrumbLink23.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList39);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        String str41 = breadCrumbLink31.getParentKey();
        breadCrumbLink31.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink31.setParent(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        String str64 = breadCrumbLink54.getParentKey();
        breadCrumbLink54.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink54.setParent(breadCrumbLink71);
        breadCrumbLink31.addNext(breadCrumbLink71);
        breadCrumbLink71.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        breadCrumbLink71.addNext(breadCrumbLink80);
        org.springframework.web.servlet.ModelAndView modelAndView82 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest25, httpServletResponse26, (Object) breadCrumbLink80, modelAndView82);
        boolean boolean84 = breadCrumbLink80.isCurrentPage();
        breadCrumbLink80.setParentKey("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "hi!" + "'", str41.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "hi!" + "'", str64.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor9 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest10 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse11 = null;
        org.springframework.web.servlet.ModelAndView modelAndView13 = null;
        breadCrumbInterceptor9.postHandle(httpServletRequest10, httpServletResponse11, (Object) "", modelAndView13);
        javax.servlet.http.HttpServletRequest httpServletRequest15 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse16 = null;
        Object obj17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView18 = null;
        breadCrumbInterceptor9.postHandle(httpServletRequest15, httpServletResponse16, obj17, modelAndView18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        Exception exception23 = null;
        breadCrumbInterceptor9.afterCompletion(httpServletRequest20, httpServletResponse21, (Object) true, exception23);
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink31.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str40 = breadCrumbLink39.getParentKey();
        breadCrumbLink39.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink39.getParent();
        breadCrumbLink31.setParent(breadCrumbLink43);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = breadCrumbLink31.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView46 = null;
        breadCrumbInterceptor9.postHandle(httpServletRequest25, httpServletResponse26, (Object) breadCrumbLink31, modelAndView46);
        breadCrumbLink4.addNext(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "hi!" + "'", str40.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink45);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList22 = breadCrumbLink9.getNext();
        breadCrumbLink9.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink9.getPrevious();
        String str26 = breadCrumbLink9.getUrl();
        breadCrumbLink9.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = breadCrumbLink9.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        String str32 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink22.setParent(breadCrumbLink39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink45.addNext(breadCrumbLink50);
        breadCrumbLink45.setCurrentPage(true);
        boolean boolean54 = breadCrumbLink45.isCurrentPage();
        String str55 = breadCrumbLink45.getParentKey();
        breadCrumbLink45.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink45.setParent(breadCrumbLink62);
        breadCrumbLink22.addNext(breadCrumbLink62);
        breadCrumbLink9.setPrevious(breadCrumbLink22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        breadCrumbLink57.setParentKey("");
        breadCrumbLink57.setFamily("");
        breadCrumbLink57.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink57.getParent();
        breadCrumbLink4.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        breadCrumbLink73.setCurrentPage(true);
        boolean boolean82 = breadCrumbLink73.isCurrentPage();
        String str83 = breadCrumbLink73.getFamily();
        breadCrumbLink73.setUrl("");
        String str86 = breadCrumbLink73.getUrl();
        breadCrumbLink73.setParentKey("");
        breadCrumbLink4.setPrevious(breadCrumbLink73);
        String str90 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "hi!" + "'", str90.equals("hi!"));
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        boolean boolean28 = breadCrumbLink21.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink36.getPrevious();
        String str44 = breadCrumbLink36.getFamily();
        breadCrumbLink36.setUrl("hi!");
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean54 = breadCrumbLink53.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = null;
        breadCrumbLink53.setPrevious(breadCrumbLink55);
        breadCrumbLink36.setParent(breadCrumbLink53);
        breadCrumbLink21.setParent(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = breadCrumbLink68.getPrevious();
        breadCrumbLink68.setParentKey("");
        breadCrumbLink21.setParent(breadCrumbLink68);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink78.addNext(breadCrumbLink83);
        String str85 = breadCrumbLink78.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList86 = breadCrumbLink78.getNext();
        String str87 = breadCrumbLink78.getFamily();
        boolean boolean88 = breadCrumbLink78.isCurrentPage();
        breadCrumbLink78.setLabel("");
        breadCrumbLink21.setParent(breadCrumbLink78);
        breadCrumbLink78.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "" + "'", str87.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        String str6 = breadCrumbLink4.getLabel();
        String str7 = breadCrumbLink4.getUrl();
        Class<?> wildcardClass8 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        String str38 = breadCrumbLink34.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink34.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink10.addNext(breadCrumbLink15);
        breadCrumbLink10.setCurrentPage(true);
        boolean boolean19 = breadCrumbLink10.isCurrentPage();
        String str20 = breadCrumbLink10.getParentKey();
        breadCrumbLink10.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink10.setParent(breadCrumbLink27);
        breadCrumbLink4.addNext(breadCrumbLink27);
        Class<?> wildcardClass30 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        breadCrumbLink27.setParentKey("");
        String str33 = breadCrumbLink27.getParentKey();
        String str34 = breadCrumbLink27.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList35 = breadCrumbLink27.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        breadCrumbLink40.setPrevious(breadCrumbLink54);
        String str65 = breadCrumbLink54.getParentKey();
        breadCrumbLink27.setParent(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink27.getParent();
        Exception exception68 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink67, exception68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "hi!" + "'", str65.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink67);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str14 = breadCrumbLink13.getParentKey();
        breadCrumbLink13.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor17 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest18 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse19 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str36 = breadCrumbLink35.getParentKey();
        breadCrumbLink29.addNext(breadCrumbLink35);
        org.springframework.web.servlet.ModelAndView modelAndView38 = null;
        breadCrumbInterceptor17.postHandle(httpServletRequest18, httpServletResponse19, (Object) breadCrumbLink35, modelAndView38);
        breadCrumbLink13.addNext(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str46 = breadCrumbLink45.getParentKey();
        breadCrumbLink45.setLabel("hi!");
        breadCrumbLink45.setCurrentPage(false);
        breadCrumbLink35.addNext(breadCrumbLink45);
        breadCrumbLink4.addNext(breadCrumbLink45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) true, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str23 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str31 = breadCrumbLink30.getParentKey();
        breadCrumbLink30.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = breadCrumbLink30.getParent();
        breadCrumbLink22.setParent(breadCrumbLink34);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink22.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView37 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink22, modelAndView37);
        breadCrumbLink22.setParentKey("");
        breadCrumbLink22.setFamily("hi!");
        String str43 = breadCrumbLink22.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink44.getPrevious();
        String str52 = breadCrumbLink44.getFamily();
        breadCrumbLink44.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink59.addNext(breadCrumbLink64);
        breadCrumbLink64.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str73 = breadCrumbLink72.getParentKey();
        breadCrumbLink72.setLabel("hi!");
        breadCrumbLink64.addNext(breadCrumbLink72);
        breadCrumbLink44.setPrevious(breadCrumbLink72);
        org.springframework.web.servlet.ModelAndView modelAndView78 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink44, modelAndView78);
        breadCrumbLink44.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        String str13 = breadCrumbLink4.getFamily();
        String str14 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        boolean boolean42 = breadCrumbLink35.isCurrentPage();
        breadCrumbLink19.setPrevious(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getParentKey();
        breadCrumbLink53.addNext(breadCrumbLink59);
        breadCrumbLink19.setPrevious(breadCrumbLink59);
        breadCrumbLink59.setLabel("");
        String str65 = breadCrumbLink59.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "hi!" + "'", str60.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "hi!" + "'", str65.equals("hi!"));
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setCurrentPage(false);
        String str9 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        String str28 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        String str46 = breadCrumbLink42.getUrl();
        breadCrumbLink42.setFamily("");
        String str49 = breadCrumbLink42.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        javax.servlet.http.HttpServletRequest httpServletRequest25 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse26 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        Class<?> wildcardClass41 = breadCrumbLink31.getClass();
        Exception exception42 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest25, httpServletResponse26, (Object) breadCrumbLink31, exception42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        boolean boolean28 = breadCrumbLink21.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink36.getPrevious();
        String str44 = breadCrumbLink36.getFamily();
        breadCrumbLink36.setUrl("hi!");
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean54 = breadCrumbLink53.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = null;
        breadCrumbLink53.setPrevious(breadCrumbLink55);
        breadCrumbLink36.setParent(breadCrumbLink53);
        breadCrumbLink21.setParent(breadCrumbLink53);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList59 = breadCrumbLink53.getNext();
        Class<?> wildcardClass60 = breadCrumbLink53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        String str26 = breadCrumbLink17.getLabel();
        Exception exception27 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) str26, exception27);
        javax.servlet.http.HttpServletRequest httpServletRequest29 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse30 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink40.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest29, httpServletResponse30, (Object) breadCrumbLink40, modelAndView43);
        breadCrumbLink40.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        String str16 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str22 = breadCrumbLink21.getUrl();
        breadCrumbLink21.setFamily("hi!");
        breadCrumbLink9.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink21.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink26.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink26.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        breadCrumbLink40.setUrl("hi!");
        breadCrumbLink40.setParentKey("");
        breadCrumbLink40.setFamily("");
        breadCrumbLink26.addNext(breadCrumbLink40);
        String str49 = breadCrumbLink40.getFamily();
        String str50 = breadCrumbLink40.getParentKey();
        breadCrumbLink4.setPrevious(breadCrumbLink40);
        String str52 = breadCrumbLink40.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "hi!" + "'", str52.equals("hi!"));
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink23.addNext(breadCrumbLink28);
        breadCrumbLink23.setCurrentPage(true);
        boolean boolean32 = breadCrumbLink23.isCurrentPage();
        String str33 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink23.setParent(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink46.setParent(breadCrumbLink63);
        breadCrumbLink23.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("");
        breadCrumbLink63.setFamily("");
        breadCrumbLink9.setPrevious(breadCrumbLink63);
        String str71 = breadCrumbLink63.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = breadCrumbLink63.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink72);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink17);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setFamily("");
        Class<?> wildcardClass16 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        breadCrumbLink16.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = breadCrumbLink16.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str39 = breadCrumbLink38.getParentKey();
        breadCrumbLink38.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor42 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str61 = breadCrumbLink60.getParentKey();
        breadCrumbLink54.addNext(breadCrumbLink60);
        org.springframework.web.servlet.ModelAndView modelAndView63 = null;
        breadCrumbInterceptor42.postHandle(httpServletRequest43, httpServletResponse44, (Object) breadCrumbLink60, modelAndView63);
        breadCrumbLink38.addNext(breadCrumbLink60);
        String str66 = breadCrumbLink38.getParentKey();
        breadCrumbLink16.setPrevious(breadCrumbLink38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "hi!" + "'", str61.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "hi!" + "'", str66.equals("hi!"));
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink27.setFamily("");
        Exception exception48 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) "", exception48);
        javax.servlet.http.HttpServletRequest httpServletRequest50 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse51 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink56.addNext(breadCrumbLink61);
        breadCrumbLink56.setCurrentPage(true);
        boolean boolean65 = breadCrumbLink56.isCurrentPage();
        String str66 = breadCrumbLink56.getParentKey();
        String str67 = breadCrumbLink56.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink77 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink72.addNext(breadCrumbLink77);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink79 = breadCrumbLink77.getPrevious();
        breadCrumbLink77.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink86 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean87 = breadCrumbLink86.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink88 = null;
        breadCrumbLink86.setPrevious(breadCrumbLink88);
        breadCrumbLink77.setPrevious(breadCrumbLink86);
        boolean boolean91 = breadCrumbLink77.isCurrentPage();
        breadCrumbLink56.setParent(breadCrumbLink77);
        org.springframework.web.servlet.ModelAndView modelAndView93 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest50, httpServletResponse51, (Object) breadCrumbLink56, modelAndView93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "hi!" + "'", str66.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList11 = breadCrumbLink4.getNext();
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setParentKey("hi!");
        breadCrumbLink4.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList11);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        Class<?> wildcardClass14 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        String str17 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        breadCrumbLink27.setUrl("");
        breadCrumbLink27.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        breadCrumbLink29.setParentKey("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList38 = breadCrumbLink29.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList38);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean27 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = null;
        breadCrumbLink26.setPrevious(breadCrumbLink28);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink26.getPrevious();
        String str31 = breadCrumbLink26.getFamily();
        breadCrumbLink9.setPrevious(breadCrumbLink26);
        String str33 = breadCrumbLink26.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList15 = breadCrumbLink4.getNext();
        Class<?> wildcardClass16 = breadCrumbLinkList15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) "hi!", exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink31.setUrl("hi!");
        breadCrumbLink31.setParentKey("");
        breadCrumbLink31.setFamily("");
        breadCrumbLink31.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView41 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) false, modelAndView41);
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        Object obj45 = null;
        Exception exception46 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest43, httpServletResponse44, obj45, exception46);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str38 = breadCrumbLink37.getParentKey();
        breadCrumbLink31.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        breadCrumbLink44.setCurrentPage(true);
        boolean boolean53 = breadCrumbLink44.isCurrentPage();
        String str54 = breadCrumbLink44.getParentKey();
        breadCrumbLink44.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink44.setParent(breadCrumbLink61);
        breadCrumbLink44.setLabel("");
        String str65 = breadCrumbLink44.getFamily();
        breadCrumbLink31.addNext(breadCrumbLink44);
        org.springframework.web.servlet.ModelAndView modelAndView67 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) breadCrumbLink44, modelAndView67);
        javax.servlet.http.HttpServletRequest httpServletRequest69 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse70 = null;
        Object obj71 = null;
        org.springframework.web.servlet.ModelAndView modelAndView72 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest69, httpServletResponse70, obj71, modelAndView72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList15 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str21 = breadCrumbLink20.getParentKey();
        breadCrumbLink20.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink20.getParent();
        breadCrumbLink20.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList27 = breadCrumbLink20.getNext();
        breadCrumbLink4.setParent(breadCrumbLink20);
        breadCrumbLink20.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink50.addNext(breadCrumbLink55);
        breadCrumbLink55.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str64 = breadCrumbLink63.getParentKey();
        breadCrumbLink63.setLabel("hi!");
        breadCrumbLink55.addNext(breadCrumbLink63);
        breadCrumbLink35.setPrevious(breadCrumbLink63);
        breadCrumbLink20.addNext(breadCrumbLink63);
        breadCrumbLink20.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "hi!" + "'", str64.equals("hi!"));
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink4.getPrevious();
        String str10 = breadCrumbLink4.getParentKey();
        boolean boolean11 = breadCrumbLink4.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        String str32 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink33);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink9.addNext(breadCrumbLink14);
        breadCrumbLink9.setCurrentPage(true);
        boolean boolean18 = breadCrumbLink9.isCurrentPage();
        String str19 = breadCrumbLink9.getFamily();
        breadCrumbLink9.setUrl("");
        String str22 = breadCrumbLink9.getFamily();
        breadCrumbLink4.setParent(breadCrumbLink9);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList24 = breadCrumbLink9.getNext();
        breadCrumbLink9.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList24);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        breadCrumbLink44.setFamily("");
        breadCrumbLink44.setCurrentPage(true);
        String str53 = breadCrumbLink44.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "" + "'", str53.equals(""));
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink11);
        Class<?> wildcardClass13 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList25 = breadCrumbLink12.getNext();
        breadCrumbLink12.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        breadCrumbLink32.setCurrentPage(true);
        boolean boolean41 = breadCrumbLink32.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        breadCrumbLink32.setPrevious(breadCrumbLink46);
        String str57 = breadCrumbLink46.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = breadCrumbLink46.getParent();
        breadCrumbLink12.addNext(breadCrumbLink46);
        String str60 = breadCrumbLink46.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        boolean boolean6 = breadCrumbLink4.isCurrentPage();
        String str7 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!" + "'", str7.equals("hi!"));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList15 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink4.getPrevious();
        String str17 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink25.getPrevious();
        String str33 = breadCrumbLink25.getFamily();
        breadCrumbLink25.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink40.getPrevious();
        String str48 = breadCrumbLink40.getFamily();
        breadCrumbLink40.setUrl("hi!");
        breadCrumbLink25.addNext(breadCrumbLink40);
        breadCrumbLink12.setPrevious(breadCrumbLink40);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink12.getPrevious();
        Exception exception55 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception55);
        Class<?> wildcardClass57 = breadCrumbLink12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) true, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str23 = breadCrumbLink22.getParentKey();
        breadCrumbLink22.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str31 = breadCrumbLink30.getParentKey();
        breadCrumbLink30.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = breadCrumbLink30.getParent();
        breadCrumbLink22.setParent(breadCrumbLink34);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink22.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView37 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink22, modelAndView37);
        boolean boolean39 = breadCrumbLink22.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "hi!" + "'", str23.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        boolean boolean6 = breadCrumbLink4.isCurrentPage();
        Class<?> wildcardClass7 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        breadCrumbLink12.setFamily("");
        breadCrumbLink12.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink35.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList50 = breadCrumbLink49.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink49);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink35.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str50 = breadCrumbLink49.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink49);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink32.getPrevious();
        String str40 = breadCrumbLink32.getFamily();
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink17.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink46);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        Exception exception4 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) (-1L), exception4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        String str19 = breadCrumbLink12.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList20 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        breadCrumbLink25.setCurrentPage(true);
        boolean boolean34 = breadCrumbLink25.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink39.addNext(breadCrumbLink44);
        breadCrumbLink39.setCurrentPage(true);
        boolean boolean48 = breadCrumbLink39.isCurrentPage();
        breadCrumbLink25.setPrevious(breadCrumbLink39);
        breadCrumbLink12.setPrevious(breadCrumbLink39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink12.getPrevious();
        Exception exception52 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception52);
        javax.servlet.http.HttpServletRequest httpServletRequest54 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse55 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink60.addNext(breadCrumbLink65);
        breadCrumbLink65.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str74 = breadCrumbLink73.getParentKey();
        breadCrumbLink73.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink81 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str82 = breadCrumbLink81.getParentKey();
        breadCrumbLink81.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = breadCrumbLink81.getParent();
        breadCrumbLink73.setParent(breadCrumbLink85);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink87 = breadCrumbLink73.getPrevious();
        breadCrumbLink65.setParent(breadCrumbLink73);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList89 = breadCrumbLink73.getNext();
        breadCrumbLink73.setUrl("hi!");
        breadCrumbLink73.setFamily("hi!");
        breadCrumbLink73.setLabel("hi!");
        org.springframework.web.servlet.ModelAndView modelAndView96 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest54, httpServletResponse55, (Object) breadCrumbLink73, modelAndView96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "hi!" + "'", str74.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!" + "'", str82.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList89);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList25 = breadCrumbLink12.getNext();
        breadCrumbLink12.setLabel("");
        breadCrumbLink12.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList25);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        breadCrumbLink9.setLabel("");
        String str21 = breadCrumbLink9.getUrl();
        breadCrumbLink9.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str30 = breadCrumbLink29.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink29.getParent();
        breadCrumbLink21.addNext(breadCrumbLink29);
        breadCrumbLink21.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str37 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        breadCrumbLink36.setCurrentPage(false);
        breadCrumbLink26.addNext(breadCrumbLink36);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList43 = breadCrumbLink26.getNext();
        Class<?> wildcardClass44 = breadCrumbLink26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        breadCrumbLink16.setFamily("hi!");
        breadCrumbLink16.setFamily("hi!");
        breadCrumbLink16.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        breadCrumbLink9.setLabel("");
        breadCrumbLink9.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            Class<?> wildcardClass33 = breadCrumbLink32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        breadCrumbLink31.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        String str51 = breadCrumbLink44.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList52 = breadCrumbLink44.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        breadCrumbLink57.setCurrentPage(true);
        boolean boolean66 = breadCrumbLink57.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink76 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink71.addNext(breadCrumbLink76);
        breadCrumbLink71.setCurrentPage(true);
        boolean boolean80 = breadCrumbLink71.isCurrentPage();
        breadCrumbLink57.setPrevious(breadCrumbLink71);
        breadCrumbLink44.setPrevious(breadCrumbLink71);
        String str83 = breadCrumbLink71.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink84 = breadCrumbLink71.getParent();
        breadCrumbLink31.addNext(breadCrumbLink71);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink86 = breadCrumbLink31.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink86);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str29 = breadCrumbLink28.getParentKey();
        breadCrumbLink28.setLabel("hi!");
        breadCrumbLink28.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink38.addNext(breadCrumbLink43);
        breadCrumbLink43.setUrl("hi!");
        breadCrumbLink43.setParentKey("");
        breadCrumbLink43.setFamily("");
        String str51 = breadCrumbLink43.getFamily();
        breadCrumbLink28.addNext(breadCrumbLink43);
        breadCrumbLink28.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink28);
        breadCrumbLink28.setUrl("hi!");
        breadCrumbLink28.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        String str36 = breadCrumbLink17.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList37 = breadCrumbLink17.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList37);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str20 = breadCrumbLink19.getParentKey();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink4.getParent();
        Class<?> wildcardClass31 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setParentKey("hi!");
        String str26 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(false);
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setCurrentPage(false);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList14 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList14);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink15.setFamily("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        breadCrumbLink57.setParentKey("");
        breadCrumbLink57.setFamily("");
        breadCrumbLink57.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink57.getParent();
        breadCrumbLink4.setParent(breadCrumbLink57);
        breadCrumbLink4.setUrl("");
        String str71 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "hi!" + "'", str71.equals("hi!"));
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink23.addNext(breadCrumbLink28);
        breadCrumbLink23.setCurrentPage(true);
        boolean boolean32 = breadCrumbLink23.isCurrentPage();
        String str33 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink23.setParent(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink46.setParent(breadCrumbLink63);
        breadCrumbLink23.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("");
        breadCrumbLink63.setFamily("");
        breadCrumbLink9.setPrevious(breadCrumbLink63);
        String str71 = breadCrumbLink63.getFamily();
        String str72 = breadCrumbLink63.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!" + "'", str72.equals("hi!"));
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink4.getParent();
        String str31 = breadCrumbLink30.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink25.getPrevious();
        String str33 = breadCrumbLink25.getFamily();
        breadCrumbLink25.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink40.getPrevious();
        String str48 = breadCrumbLink40.getFamily();
        breadCrumbLink40.setUrl("hi!");
        breadCrumbLink25.addNext(breadCrumbLink40);
        breadCrumbLink12.setPrevious(breadCrumbLink40);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink12.getPrevious();
        Exception exception55 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception55);
        javax.servlet.http.HttpServletRequest httpServletRequest57 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse58 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink68.setUrl("hi!");
        breadCrumbLink68.setParentKey("");
        String str74 = breadCrumbLink68.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList75 = breadCrumbLink68.getNext();
        String str76 = breadCrumbLink68.getUrl();
        Exception exception77 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest57, httpServletResponse58, (Object) str76, exception77);
        javax.servlet.http.HttpServletRequest httpServletRequest79 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse80 = null;
        Exception exception82 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest79, httpServletResponse80, (Object) 'a', exception82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor23 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor26 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        org.springframework.web.servlet.ModelAndView modelAndView30 = null;
        breadCrumbInterceptor26.postHandle(httpServletRequest27, httpServletResponse28, (Object) "", modelAndView30);
        Exception exception32 = null;
        breadCrumbInterceptor23.afterCompletion(httpServletRequest24, httpServletResponse25, (Object) breadCrumbInterceptor26, exception32);
        javax.servlet.http.HttpServletRequest httpServletRequest34 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse35 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor36 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str55 = breadCrumbLink54.getParentKey();
        breadCrumbLink48.addNext(breadCrumbLink54);
        org.springframework.web.servlet.ModelAndView modelAndView57 = null;
        breadCrumbInterceptor36.postHandle(httpServletRequest37, httpServletResponse38, (Object) breadCrumbLink54, modelAndView57);
        org.springframework.web.servlet.ModelAndView modelAndView59 = null;
        breadCrumbInterceptor23.postHandle(httpServletRequest34, httpServletResponse35, (Object) breadCrumbLink54, modelAndView59);
        javax.servlet.http.HttpServletRequest httpServletRequest61 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse62 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor63 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest64 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse65 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink70.addNext(breadCrumbLink75);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink81 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str82 = breadCrumbLink81.getParentKey();
        breadCrumbLink75.addNext(breadCrumbLink81);
        org.springframework.web.servlet.ModelAndView modelAndView84 = null;
        breadCrumbInterceptor63.postHandle(httpServletRequest64, httpServletResponse65, (Object) breadCrumbLink81, modelAndView84);
        Exception exception86 = null;
        breadCrumbInterceptor23.afterCompletion(httpServletRequest61, httpServletResponse62, (Object) breadCrumbLink81, exception86);
        org.springframework.web.servlet.ModelAndView modelAndView88 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink81, modelAndView88);
        javax.servlet.http.HttpServletRequest httpServletRequest90 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse91 = null;
        Object obj92 = null;
        Exception exception93 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest90, httpServletResponse91, obj92, exception93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!" + "'", str82.equals("hi!"));
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = breadCrumbLink4.getParent();
        breadCrumbLink4.setUrl("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList9 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList9);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str39 = breadCrumbLink38.getParentKey();
        breadCrumbLink38.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor42 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str61 = breadCrumbLink60.getParentKey();
        breadCrumbLink54.addNext(breadCrumbLink60);
        org.springframework.web.servlet.ModelAndView modelAndView63 = null;
        breadCrumbInterceptor42.postHandle(httpServletRequest43, httpServletResponse44, (Object) breadCrumbLink60, modelAndView63);
        breadCrumbLink38.addNext(breadCrumbLink60);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink70.addNext(breadCrumbLink75);
        breadCrumbLink75.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str84 = breadCrumbLink83.getParentKey();
        breadCrumbLink83.setLabel("hi!");
        breadCrumbLink75.addNext(breadCrumbLink83);
        breadCrumbLink60.addNext(breadCrumbLink83);
        breadCrumbLink9.setParent(breadCrumbLink60);
        Class<?> wildcardClass90 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "hi!" + "'", str61.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "hi!" + "'", str84.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str30 = breadCrumbLink29.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink29.getParent();
        breadCrumbLink21.addNext(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str38 = breadCrumbLink37.getParentKey();
        breadCrumbLink37.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor41 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest42 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse43 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getParentKey();
        breadCrumbLink53.addNext(breadCrumbLink59);
        org.springframework.web.servlet.ModelAndView modelAndView62 = null;
        breadCrumbInterceptor41.postHandle(httpServletRequest42, httpServletResponse43, (Object) breadCrumbLink59, modelAndView62);
        breadCrumbLink37.addNext(breadCrumbLink59);
        breadCrumbLink59.setLabel("hi!");
        breadCrumbLink29.addNext(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "hi!" + "'", str60.equals("hi!"));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str30 = breadCrumbLink29.getParentKey();
        breadCrumbLink29.setLabel("hi!");
        boolean boolean33 = breadCrumbLink29.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList34 = breadCrumbLink29.getNext();
        breadCrumbLink12.addNext(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList34);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        breadCrumbLink44.setFamily("");
        String str51 = breadCrumbLink44.getLabel();
        breadCrumbLink44.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        String str20 = breadCrumbLink4.getLabel();
        breadCrumbLink4.setCurrentPage(false);
        String str23 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "" + "'", str23.equals(""));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink11.getParent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        breadCrumbLink17.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        String str8 = breadCrumbLink4.getLabel();
        breadCrumbLink4.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink18.getParent();
        boolean boolean32 = breadCrumbLink18.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = breadCrumbLink18.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink33);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        breadCrumbLink27.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView39 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str46 = breadCrumbLink45.getParentKey();
        breadCrumbLink45.setLabel("hi!");
        breadCrumbLink45.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink55.addNext(breadCrumbLink60);
        breadCrumbLink60.setUrl("hi!");
        breadCrumbLink60.setParentKey("");
        breadCrumbLink60.setFamily("");
        String str68 = breadCrumbLink60.getFamily();
        breadCrumbLink45.addNext(breadCrumbLink60);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = breadCrumbLink60.getParent();
        breadCrumbLink27.addNext(breadCrumbLink60);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = breadCrumbLink27.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink72);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        breadCrumbLink20.setUrl("hi!");
        breadCrumbLink20.setParentKey("");
        breadCrumbLink20.setFamily("");
        breadCrumbLink20.setCurrentPage(false);
        breadCrumbLink20.setLabel("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList32 = breadCrumbLink20.getNext();
        String str33 = breadCrumbLink20.getParentKey();
        breadCrumbLink4.setPrevious(breadCrumbLink20);
        breadCrumbLink4.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        String str31 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList22 = breadCrumbLink9.getNext();
        breadCrumbLink9.setCurrentPage(true);
        breadCrumbLink9.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList22);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        breadCrumbLink9.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        String str32 = breadCrumbLink22.getFamily();
        breadCrumbLink9.addNext(breadCrumbLink22);
        breadCrumbLink9.setParentKey("");
        boolean boolean36 = breadCrumbLink9.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink8.getParent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        Exception exception4 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) (-1L), exception4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        String str19 = breadCrumbLink12.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList20 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        breadCrumbLink25.setCurrentPage(true);
        boolean boolean34 = breadCrumbLink25.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink39.addNext(breadCrumbLink44);
        breadCrumbLink39.setCurrentPage(true);
        boolean boolean48 = breadCrumbLink39.isCurrentPage();
        breadCrumbLink25.setPrevious(breadCrumbLink39);
        breadCrumbLink12.setPrevious(breadCrumbLink39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink12.getPrevious();
        Exception exception52 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception52);
        Class<?> wildcardClass54 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        breadCrumbLink44.addNext(breadCrumbLink53);
        boolean boolean55 = breadCrumbLink44.isCurrentPage();
        String str56 = breadCrumbLink44.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setUrl("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList14 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink19.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean37 = breadCrumbLink36.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = null;
        breadCrumbLink36.setPrevious(breadCrumbLink38);
        breadCrumbLink19.setParent(breadCrumbLink36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str46 = breadCrumbLink45.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink45.getParent();
        breadCrumbLink36.setParent(breadCrumbLink47);
        breadCrumbLink4.addNext(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink4.getParent();
        breadCrumbLink30.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink37.addNext(breadCrumbLink42);
        String str44 = breadCrumbLink42.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink42.getNext();
        breadCrumbLink30.setPrevious(breadCrumbLink42);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink42.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink42.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "hi!");
        breadCrumbLink4.setParentKey("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList7 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList7);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        breadCrumbLink4.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        boolean boolean12 = breadCrumbLink11.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink22.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str31 = breadCrumbLink30.getParentKey();
        breadCrumbLink30.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str39 = breadCrumbLink38.getParentKey();
        breadCrumbLink38.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink38.getParent();
        breadCrumbLink30.setParent(breadCrumbLink42);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = breadCrumbLink30.getPrevious();
        breadCrumbLink22.setParent(breadCrumbLink30);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList46 = breadCrumbLink30.getNext();
        breadCrumbLink11.setParent(breadCrumbLink30);
        breadCrumbLink4.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str54 = breadCrumbLink53.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = breadCrumbLink53.getParent();
        breadCrumbLink4.addNext(breadCrumbLink53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink55);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList17 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink22.setCurrentPage(true);
        boolean boolean31 = breadCrumbLink22.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        breadCrumbLink22.setPrevious(breadCrumbLink36);
        String str47 = breadCrumbLink36.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink9.getParent();
        breadCrumbLink9.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink49);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        String str13 = breadCrumbLink4.getFamily();
        boolean boolean14 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        breadCrumbLink9.setCurrentPage(true);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList20 = breadCrumbLink9.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList20);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        String str15 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        String str15 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = breadCrumbLink25.getPrevious();
        breadCrumbLink25.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean35 = breadCrumbLink34.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = null;
        breadCrumbLink34.setPrevious(breadCrumbLink36);
        breadCrumbLink25.setPrevious(breadCrumbLink34);
        boolean boolean39 = breadCrumbLink25.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink25);
        String str41 = breadCrumbLink25.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink26.setUrl("hi!");
        breadCrumbLink26.setParentKey("");
        breadCrumbLink26.setFamily("");
        breadCrumbLink26.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getParentKey();
        breadCrumbLink40.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink40.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink63.setCurrentPage(true);
        boolean boolean72 = breadCrumbLink63.isCurrentPage();
        String str73 = breadCrumbLink63.getParentKey();
        breadCrumbLink63.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink63.setParent(breadCrumbLink80);
        breadCrumbLink40.addNext(breadCrumbLink80);
        breadCrumbLink80.setUrl("");
        breadCrumbLink80.setFamily("");
        breadCrumbLink26.setPrevious(breadCrumbLink80);
        breadCrumbLink9.addNext(breadCrumbLink80);
        String str89 = breadCrumbLink9.getLabel();
        String str90 = breadCrumbLink9.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink23.addNext(breadCrumbLink28);
        breadCrumbLink23.setCurrentPage(true);
        boolean boolean32 = breadCrumbLink23.isCurrentPage();
        String str33 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink23.setParent(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink46.setParent(breadCrumbLink63);
        breadCrumbLink23.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("");
        breadCrumbLink63.setFamily("");
        breadCrumbLink9.setPrevious(breadCrumbLink63);
        String str71 = breadCrumbLink9.getLabel();
        String str72 = breadCrumbLink9.getUrl();
        Class<?> wildcardClass73 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!" + "'", str72.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        breadCrumbLink44.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink55.setFamily("");
        breadCrumbLink55.setParentKey("hi!");
        String str60 = breadCrumbLink55.getUrl();
        breadCrumbLink44.setParent(breadCrumbLink55);
        String str62 = breadCrumbLink44.getLabel();
        breadCrumbLink44.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        breadCrumbLink27.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView39 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView39);
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str48 = breadCrumbLink47.getParentKey();
        String str49 = breadCrumbLink47.getLabel();
        String str50 = breadCrumbLink47.getUrl();
        Exception exception51 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest41, httpServletResponse42, (Object) str50, exception51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink4.setFamily("");
        String str7 = breadCrumbLink4.getFamily();
        String str8 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = null;
        breadCrumbLink4.addNext(breadCrumbLink20);
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink28.addNext(breadCrumbLink33);
        breadCrumbLink28.setCurrentPage(true);
        boolean boolean37 = breadCrumbLink28.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink42.addNext(breadCrumbLink47);
        breadCrumbLink42.setCurrentPage(true);
        boolean boolean51 = breadCrumbLink42.isCurrentPage();
        breadCrumbLink28.setPrevious(breadCrumbLink42);
        String str53 = breadCrumbLink42.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink42.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink59.addNext(breadCrumbLink64);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = breadCrumbLink59.getPrevious();
        String str67 = breadCrumbLink59.getFamily();
        breadCrumbLink59.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = breadCrumbLink59.getParent();
        String str71 = breadCrumbLink59.getLabel();
        breadCrumbLink42.addNext(breadCrumbLink59);
        boolean boolean73 = breadCrumbLink42.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink74 = null;
        breadCrumbLink42.addNext(breadCrumbLink74);
        breadCrumbLink4.addNext(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "hi!" + "'", str53.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "" + "'", str71.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink26);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str20 = breadCrumbLink19.getLabel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink39.addNext(breadCrumbLink44);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink39.getPrevious();
        String str47 = breadCrumbLink39.getFamily();
        breadCrumbLink39.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = breadCrumbLink39.getParent();
        String str51 = breadCrumbLink39.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink56.addNext(breadCrumbLink61);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = breadCrumbLink56.getPrevious();
        String str64 = breadCrumbLink56.getFamily();
        breadCrumbLink39.setPrevious(breadCrumbLink56);
        String str66 = breadCrumbLink39.getFamily();
        breadCrumbLink17.setParent(breadCrumbLink39);
        breadCrumbLink17.setFamily("hi!");
        String str70 = breadCrumbLink17.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "hi!" + "'", str70.equals("hi!"));
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) (byte) 100, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        breadCrumbLink27.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView39 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, modelAndView39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str46 = breadCrumbLink45.getParentKey();
        breadCrumbLink45.setLabel("hi!");
        breadCrumbLink45.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink55.addNext(breadCrumbLink60);
        breadCrumbLink60.setUrl("hi!");
        breadCrumbLink60.setParentKey("");
        breadCrumbLink60.setFamily("");
        String str68 = breadCrumbLink60.getFamily();
        breadCrumbLink45.addNext(breadCrumbLink60);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = breadCrumbLink60.getParent();
        breadCrumbLink27.addNext(breadCrumbLink60);
        String str72 = breadCrumbLink27.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        String str30 = breadCrumbLink18.getParentKey();
        String str31 = breadCrumbLink18.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList32 = breadCrumbLink18.getNext();
        String str33 = breadCrumbLink18.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = null;
        breadCrumbLink18.addNext(breadCrumbLink34);
        String str36 = breadCrumbLink18.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink10.addNext(breadCrumbLink15);
        breadCrumbLink15.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        breadCrumbLink15.addNext(breadCrumbLink23);
        boolean boolean28 = breadCrumbLink15.isCurrentPage();
        breadCrumbLink4.addNext(breadCrumbLink15);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str35 = breadCrumbLink34.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink34.getParent();
        breadCrumbLink4.setPrevious(breadCrumbLink36);
        String str38 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!" + "'", str24.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        breadCrumbLink9.setLabel("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList21 = breadCrumbLink9.getNext();
        Class<?> wildcardClass22 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        breadCrumbLink17.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str43 = breadCrumbLink42.getParentKey();
        breadCrumbLink42.setLabel("hi!");
        boolean boolean46 = breadCrumbLink42.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList47 = breadCrumbLink42.getNext();
        String str48 = breadCrumbLink42.getLabel();
        breadCrumbLink17.setParent(breadCrumbLink42);
        String str50 = breadCrumbLink42.getParentKey();
        Class<?> wildcardClass51 = breadCrumbLink42.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "hi!" + "'", str43.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            Class<?> wildcardClass10 = breadCrumbLink9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink9);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink18.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList30 = breadCrumbLink29.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink7);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink17);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink17.setCurrentPage(false);
        breadCrumbLink17.setUrl("");
        breadCrumbLink17.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = breadCrumbLink17.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView28 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink27, modelAndView28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink27);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str37 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        breadCrumbLink36.setCurrentPage(false);
        breadCrumbLink26.addNext(breadCrumbLink36);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList43 = breadCrumbLink26.getNext();
        breadCrumbLink26.setCurrentPage(true);
        breadCrumbLink26.setCurrentPage(false);
        breadCrumbLink26.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = breadCrumbLink26.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink50);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink44.getPrevious();
        breadCrumbLink21.addNext(breadCrumbLink46);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = breadCrumbLink52.getPrevious();
        String str60 = breadCrumbLink52.getFamily();
        breadCrumbLink52.setLabel("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList63 = breadCrumbLink52.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = breadCrumbLink52.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = breadCrumbLink52.getPrevious();
        breadCrumbLink21.addNext(breadCrumbLink65);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = breadCrumbLink65.isCurrentPage();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink65);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        breadCrumbLink27.setUrl("");
        breadCrumbLink27.setUrl("");
        breadCrumbLink27.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setParentKey("hi!");
        breadCrumbLink4.setParentKey("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        String str6 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("hi!");
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink23.getParent();
        breadCrumbLink4.setPrevious(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = breadCrumbLink4.getPrevious();
        String str28 = breadCrumbLink27.getUrl();
        String str29 = breadCrumbLink27.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean35 = breadCrumbLink34.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = null;
        breadCrumbLink34.setPrevious(breadCrumbLink36);
        String str38 = breadCrumbLink34.getParentKey();
        breadCrumbLink34.setCurrentPage(false);
        breadCrumbLink27.setPrevious(breadCrumbLink34);
        breadCrumbLink27.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink26.setUrl("hi!");
        breadCrumbLink26.setParentKey("");
        breadCrumbLink26.setFamily("");
        breadCrumbLink26.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getParentKey();
        breadCrumbLink40.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink40.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink63.addNext(breadCrumbLink68);
        breadCrumbLink63.setCurrentPage(true);
        boolean boolean72 = breadCrumbLink63.isCurrentPage();
        String str73 = breadCrumbLink63.getParentKey();
        breadCrumbLink63.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink80 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink63.setParent(breadCrumbLink80);
        breadCrumbLink40.addNext(breadCrumbLink80);
        breadCrumbLink80.setUrl("");
        breadCrumbLink80.setFamily("");
        breadCrumbLink26.setPrevious(breadCrumbLink80);
        breadCrumbLink9.addNext(breadCrumbLink80);
        String str89 = breadCrumbLink9.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink94 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean95 = breadCrumbLink94.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink96 = null;
        breadCrumbLink94.setPrevious(breadCrumbLink96);
        String str98 = breadCrumbLink94.getParentKey();
        breadCrumbLink9.addNext(breadCrumbLink94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "hi!" + "'", str73.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str89 + "' != '" + "" + "'", str89.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "hi!" + "'", str98.equals("hi!"));
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        String str8 = breadCrumbLink4.getParentKey();
        String str9 = breadCrumbLink4.getLabel();
        String str10 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        String str17 = breadCrumbLink15.getLabel();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor18 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest19 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse20 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink25.getPrevious();
        String str33 = breadCrumbLink25.getFamily();
        breadCrumbLink25.setUrl("hi!");
        breadCrumbLink25.setFamily("");
        Exception exception38 = null;
        breadCrumbInterceptor18.afterCompletion(httpServletRequest19, httpServletResponse20, (Object) breadCrumbLink25, exception38);
        javax.servlet.http.HttpServletRequest httpServletRequest40 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse41 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        breadCrumbLink46.setCurrentPage(true);
        org.springframework.web.servlet.ModelAndView modelAndView50 = null;
        breadCrumbInterceptor18.postHandle(httpServletRequest40, httpServletResponse41, (Object) breadCrumbLink46, modelAndView50);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink56.addNext(breadCrumbLink61);
        breadCrumbLink56.setCurrentPage(true);
        boolean boolean65 = breadCrumbLink56.isCurrentPage();
        String str66 = breadCrumbLink56.getFamily();
        breadCrumbLink56.setUrl("");
        String str69 = breadCrumbLink56.getFamily();
        String str70 = breadCrumbLink56.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = breadCrumbLink56.getPrevious();
        breadCrumbLink56.setUrl("");
        breadCrumbLink46.setPrevious(breadCrumbLink56);
        breadCrumbLink15.addNext(breadCrumbLink56);
        breadCrumbLink4.addNext(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "" + "'", str70.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink71);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink7);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str30 = breadCrumbLink29.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink29.getParent();
        breadCrumbLink21.addNext(breadCrumbLink29);
        Class<?> wildcardClass33 = breadCrumbLink21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.addNext(breadCrumbLink15);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink18.setUrl("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        Exception exception19 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink17, exception19);
        breadCrumbLink17.setUrl("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList23 = breadCrumbLink17.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList23);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink4.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink32.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink39.addNext(breadCrumbLink44);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink39.getPrevious();
        String str47 = breadCrumbLink39.getFamily();
        breadCrumbLink39.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = breadCrumbLink39.getParent();
        String str51 = breadCrumbLink39.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink61 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink56.addNext(breadCrumbLink61);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = breadCrumbLink56.getPrevious();
        String str64 = breadCrumbLink56.getFamily();
        breadCrumbLink39.setPrevious(breadCrumbLink56);
        String str66 = breadCrumbLink39.getFamily();
        breadCrumbLink17.setParent(breadCrumbLink39);
        breadCrumbLink17.setFamily("hi!");
        String str70 = breadCrumbLink17.getUrl();
        String str71 = breadCrumbLink17.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("");
        String str12 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = breadCrumbLink17.getParent();
        String str29 = breadCrumbLink17.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink34.addNext(breadCrumbLink39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = breadCrumbLink34.getPrevious();
        String str42 = breadCrumbLink34.getFamily();
        breadCrumbLink17.setPrevious(breadCrumbLink34);
        breadCrumbLink17.setFamily("hi!");
        breadCrumbLink4.addNext(breadCrumbLink17);
        breadCrumbLink17.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        breadCrumbLink27.setUrl("");
        breadCrumbLink27.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str64 = breadCrumbLink63.getFamily();
        String str65 = breadCrumbLink63.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = breadCrumbLink63.getPrevious();
        breadCrumbLink63.setUrl("hi!");
        breadCrumbLink27.setPrevious(breadCrumbLink63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "" + "'", str64.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink66);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getPrevious();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink11.getPrevious();
        String str19 = breadCrumbLink11.getFamily();
        breadCrumbLink11.setUrl("hi!");
        breadCrumbLink11.setFamily("");
        breadCrumbLink4.addNext(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "hi!" + "'", str6.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = breadCrumbLink4.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink6.setParentKey("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink6);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = breadCrumbLink4.getPrevious();
        boolean boolean33 = breadCrumbLink4.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = breadCrumbLink4.getPrevious();
        String str10 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink16.addNext(breadCrumbLink21);
        breadCrumbLink21.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink21.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink30.addNext(breadCrumbLink35);
        breadCrumbLink35.setUrl("hi!");
        breadCrumbLink35.setParentKey("");
        breadCrumbLink35.setFamily("");
        breadCrumbLink21.addNext(breadCrumbLink35);
        breadCrumbLink4.addNext(breadCrumbLink35);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink50.addNext(breadCrumbLink55);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = breadCrumbLink55.getPrevious();
        breadCrumbLink55.setParentKey("");
        breadCrumbLink55.setUrl("");
        String str62 = breadCrumbLink55.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str68 = breadCrumbLink67.getUrl();
        breadCrumbLink67.setFamily("hi!");
        breadCrumbLink55.setParent(breadCrumbLink67);
        breadCrumbLink4.setParent(breadCrumbLink67);
        breadCrumbLink67.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", true, "");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) "hi!", exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink26.setCurrentPage(true);
        boolean boolean35 = breadCrumbLink26.isCurrentPage();
        String str36 = breadCrumbLink26.getFamily();
        breadCrumbLink26.setUrl("");
        String str39 = breadCrumbLink26.getUrl();
        breadCrumbLink26.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink51.setUrl("hi!");
        breadCrumbLink51.setCurrentPage(true);
        breadCrumbLink26.setPrevious(breadCrumbLink51);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "");
        breadCrumbLink26.setPrevious(breadCrumbLink62);
        org.springframework.web.servlet.ModelAndView modelAndView64 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) breadCrumbLink26, modelAndView64);
        String str66 = breadCrumbLink26.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink21.setCurrentPage(true);
        boolean boolean30 = breadCrumbLink21.isCurrentPage();
        String str31 = breadCrumbLink21.getFamily();
        breadCrumbLink21.setUrl("");
        String str34 = breadCrumbLink21.getFamily();
        String str35 = breadCrumbLink21.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink21.getPrevious();
        breadCrumbLink21.setCurrentPage(true);
        breadCrumbLink21.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str46 = breadCrumbLink45.getParentKey();
        breadCrumbLink45.setLabel("hi!");
        breadCrumbLink45.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink55.addNext(breadCrumbLink60);
        breadCrumbLink60.setUrl("hi!");
        breadCrumbLink60.setParentKey("");
        breadCrumbLink60.setFamily("");
        String str68 = breadCrumbLink60.getFamily();
        breadCrumbLink45.addNext(breadCrumbLink60);
        breadCrumbLink45.setCurrentPage(true);
        breadCrumbLink21.setPrevious(breadCrumbLink45);
        breadCrumbLink45.setUrl("hi!");
        breadCrumbLink9.setParent(breadCrumbLink45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "" + "'", str31.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "" + "'", str68.equals(""));
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setFamily("");
        Class<?> wildcardClass19 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str33 = breadCrumbLink32.getParentKey();
        breadCrumbLink32.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink32.getParent();
        breadCrumbLink24.setParent(breadCrumbLink36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = breadCrumbLink24.getPrevious();
        breadCrumbLink16.setParent(breadCrumbLink24);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList40 = breadCrumbLink24.getNext();
        breadCrumbLink24.setUrl("hi!");
        breadCrumbLink24.setFamily("hi!");
        breadCrumbLink4.setPrevious(breadCrumbLink24);
        Class<?> wildcardClass46 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        Object obj8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, obj8, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        org.springframework.web.servlet.ModelAndView modelAndView14 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) false, modelAndView14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink22.addNext(breadCrumbLink27);
        breadCrumbLink27.setUrl("hi!");
        breadCrumbLink27.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest16, httpServletResponse17, (Object) breadCrumbLink27, modelAndView33);
        String str35 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink45.setUrl("hi!");
        breadCrumbLink27.setPrevious(breadCrumbLink45);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = breadCrumbLink45.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "" + "'", str35.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink50);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        breadCrumbLink17.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList35 = breadCrumbLink17.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList35);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink32.getPrevious();
        String str40 = breadCrumbLink32.getFamily();
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink17.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        String str45 = breadCrumbLink32.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str51 = breadCrumbLink50.getParentKey();
        breadCrumbLink50.setLabel("hi!");
        breadCrumbLink50.setCurrentPage(false);
        breadCrumbLink50.setUrl("");
        breadCrumbLink50.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = breadCrumbLink50.getPrevious();
        breadCrumbLink32.addNext(breadCrumbLink60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "" + "'", str45.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink60);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setLabel("hi!");
        String str55 = breadCrumbLink27.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink9.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink9.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getPrevious();
        String str14 = breadCrumbLink9.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        breadCrumbLink57.setParentKey("");
        breadCrumbLink57.setFamily("");
        breadCrumbLink57.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink57.getParent();
        breadCrumbLink4.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        breadCrumbLink73.setCurrentPage(true);
        boolean boolean82 = breadCrumbLink73.isCurrentPage();
        String str83 = breadCrumbLink73.getFamily();
        breadCrumbLink73.setUrl("");
        String str86 = breadCrumbLink73.getUrl();
        breadCrumbLink73.setParentKey("");
        breadCrumbLink4.setPrevious(breadCrumbLink73);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink92 = breadCrumbLink4.getParent();
        breadCrumbLink4.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink92);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        String str19 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = breadCrumbLink4.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink20);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink4.getPrevious();
        String str32 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList9 = breadCrumbLink4.getNext();
        String str10 = breadCrumbLink4.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList11 = breadCrumbLink4.getNext();
        Class<?> wildcardClass12 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        breadCrumbLink16.setParentKey("");
        String str33 = breadCrumbLink16.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        breadCrumbLink57.setParentKey("");
        breadCrumbLink57.setFamily("");
        breadCrumbLink57.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink57.getParent();
        breadCrumbLink4.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        breadCrumbLink73.setCurrentPage(true);
        boolean boolean82 = breadCrumbLink73.isCurrentPage();
        String str83 = breadCrumbLink73.getFamily();
        breadCrumbLink73.setUrl("");
        String str86 = breadCrumbLink73.getUrl();
        breadCrumbLink73.setParentKey("");
        breadCrumbLink4.setPrevious(breadCrumbLink73);
        breadCrumbLink4.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        String str11 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str17 = breadCrumbLink16.getParentKey();
        breadCrumbLink16.setLabel("hi!");
        breadCrumbLink16.setCurrentPage(false);
        breadCrumbLink16.setUrl("");
        breadCrumbLink16.setCurrentPage(false);
        String str26 = breadCrumbLink16.getFamily();
        breadCrumbLink4.setPrevious(breadCrumbLink16);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        breadCrumbLink37.setUrl("hi!");
        breadCrumbLink37.setParentKey("");
        breadCrumbLink37.setFamily("");
        breadCrumbLink37.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = breadCrumbLink37.getParent();
        breadCrumbLink4.addNext(breadCrumbLink37);
        String str49 = breadCrumbLink4.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "" + "'", str49.equals(""));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        String str15 = breadCrumbLink9.getParentKey();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList16 = breadCrumbLink9.getNext();
        String str17 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = null;
        breadCrumbLink9.setPrevious(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = breadCrumbLink9.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink21);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        boolean boolean42 = breadCrumbLink35.isCurrentPage();
        breadCrumbLink19.setPrevious(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink48.addNext(breadCrumbLink53);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getParentKey();
        breadCrumbLink53.addNext(breadCrumbLink59);
        breadCrumbLink19.setPrevious(breadCrumbLink59);
        breadCrumbLink59.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = breadCrumbLink59.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str71 = breadCrumbLink70.getParentKey();
        breadCrumbLink70.setLabel("hi!");
        breadCrumbLink70.setCurrentPage(false);
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink65.addNext(breadCrumbLink70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "hi!" + "'", str60.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "hi!" + "'", str71.equals("hi!"));
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        String str6 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("hi!");
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        breadCrumbLink15.setCurrentPage(true);
        boolean boolean24 = breadCrumbLink15.isCurrentPage();
        String str25 = breadCrumbLink15.getParentKey();
        breadCrumbLink15.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink15.setParent(breadCrumbLink32);
        breadCrumbLink15.setLabel("");
        String str36 = breadCrumbLink15.getFamily();
        breadCrumbLink15.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str44 = breadCrumbLink43.getParentKey();
        breadCrumbLink43.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor47 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest48 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse49 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str66 = breadCrumbLink65.getParentKey();
        breadCrumbLink59.addNext(breadCrumbLink65);
        org.springframework.web.servlet.ModelAndView modelAndView68 = null;
        breadCrumbInterceptor47.postHandle(httpServletRequest48, httpServletResponse49, (Object) breadCrumbLink65, modelAndView68);
        breadCrumbLink43.addNext(breadCrumbLink65);
        breadCrumbLink15.setParent(breadCrumbLink65);
        breadCrumbLink4.setPrevious(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "hi!" + "'", str66.equals("hi!"));
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getLabel();
        String str12 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        breadCrumbLink57.setParentKey("");
        breadCrumbLink57.setFamily("");
        breadCrumbLink57.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink57.getParent();
        breadCrumbLink4.setParent(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        breadCrumbLink73.setCurrentPage(true);
        boolean boolean82 = breadCrumbLink73.isCurrentPage();
        String str83 = breadCrumbLink73.getFamily();
        breadCrumbLink73.setUrl("");
        String str86 = breadCrumbLink73.getUrl();
        breadCrumbLink73.setParentKey("");
        breadCrumbLink4.setPrevious(breadCrumbLink73);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink90 = breadCrumbLink73.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink91 = breadCrumbLink90.getPrevious();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "" + "'", str83.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink90);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = null;
        breadCrumbLink4.setParent(breadCrumbLink18);
        String str20 = breadCrumbLink4.getLabel();
        String str21 = breadCrumbLink4.getFamily();
        Class<?> wildcardClass22 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        String str22 = breadCrumbLink9.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception18 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) false, exception18);
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getFamily();
        String str28 = breadCrumbLink26.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink33.addNext(breadCrumbLink38);
        breadCrumbLink38.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        breadCrumbLink38.addNext(breadCrumbLink46);
        boolean boolean51 = breadCrumbLink38.isCurrentPage();
        breadCrumbLink26.setParent(breadCrumbLink38);
        breadCrumbLink38.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str60 = breadCrumbLink59.getFamily();
        String str61 = breadCrumbLink59.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = breadCrumbLink59.getPrevious();
        breadCrumbLink38.setPrevious(breadCrumbLink59);
        breadCrumbLink38.setCurrentPage(false);
        org.springframework.web.servlet.ModelAndView modelAndView66 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest20, httpServletResponse21, (Object) false, modelAndView66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "" + "'", str28.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "" + "'", str60.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "" + "'", str61.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink62);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("");
        String str30 = breadCrumbLink17.getUrl();
        breadCrumbLink17.setParentKey("");
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest11, httpServletResponse12, (Object) "", modelAndView33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "" + "'", str30.equals(""));
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        javax.servlet.http.HttpServletRequest httpServletRequest38 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse39 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor40 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest41 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse42 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink47 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink47.addNext(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str59 = breadCrumbLink58.getParentKey();
        breadCrumbLink52.addNext(breadCrumbLink58);
        org.springframework.web.servlet.ModelAndView modelAndView61 = null;
        breadCrumbInterceptor40.postHandle(httpServletRequest41, httpServletResponse42, (Object) breadCrumbLink58, modelAndView61);
        Exception exception63 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest38, httpServletResponse39, (Object) breadCrumbLink58, exception63);
        breadCrumbLink58.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = breadCrumbLink58.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink67);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "");
        breadCrumbLink4.setFamily("");
        String str7 = breadCrumbLink4.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList8 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList8);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "");
        breadCrumbLink4.setFamily("");
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setParentKey("hi!");
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink41.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str50 = breadCrumbLink49.getParentKey();
        breadCrumbLink49.setLabel("hi!");
        breadCrumbLink41.addNext(breadCrumbLink49);
        breadCrumbLink26.addNext(breadCrumbLink49);
        String str55 = breadCrumbLink26.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "hi!" + "'", str50.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "hi!" + "'", str55.equals("hi!"));
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        breadCrumbLink17.setFamily("hi!");
        breadCrumbLink17.setUrl("");
        String str40 = breadCrumbLink17.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "hi!" + "'", str40.equals("hi!"));
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        breadCrumbLink18.setFamily("");
        String str51 = breadCrumbLink18.getFamily();
        String str52 = breadCrumbLink18.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "hi!" + "'", str52.equals("hi!"));
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        breadCrumbLink12.setFamily("");
        Class<?> wildcardClass27 = breadCrumbLink12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink14.addNext(breadCrumbLink19);
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink19.setParentKey("");
        breadCrumbLink19.setFamily("");
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink4.addNext(breadCrumbLink19);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList29 = breadCrumbLink19.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList29);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        boolean boolean11 = breadCrumbLink4.isCurrentPage();
        String str12 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink23.addNext(breadCrumbLink28);
        breadCrumbLink23.setCurrentPage(true);
        boolean boolean32 = breadCrumbLink23.isCurrentPage();
        String str33 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink23.setParent(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink46.setParent(breadCrumbLink63);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = breadCrumbLink63.getPrevious();
        breadCrumbLink40.addNext(breadCrumbLink65);
        breadCrumbLink4.setParent(breadCrumbLink40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink65);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        breadCrumbLink17.setFamily("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList38 = breadCrumbLink17.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList38);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        breadCrumbLink4.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList46 = breadCrumbLink4.getNext();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList47 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink48);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        String str6 = breadCrumbLink4.getUrl();
        boolean boolean7 = breadCrumbLink4.isCurrentPage();
        String str8 = breadCrumbLink4.getFamily();
        String str9 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "" + "'", str8.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        String str16 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = breadCrumbLink21.getPrevious();
        String str29 = breadCrumbLink21.getFamily();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        boolean boolean31 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink41.setUrl("hi!");
        breadCrumbLink41.setParentKey("");
        String str47 = breadCrumbLink41.getParentKey();
        String str48 = breadCrumbLink41.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList49 = breadCrumbLink41.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink59 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink54.addNext(breadCrumbLink59);
        breadCrumbLink54.setCurrentPage(true);
        boolean boolean63 = breadCrumbLink54.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink68.addNext(breadCrumbLink73);
        breadCrumbLink68.setCurrentPage(true);
        boolean boolean77 = breadCrumbLink68.isCurrentPage();
        breadCrumbLink54.setPrevious(breadCrumbLink68);
        String str79 = breadCrumbLink68.getParentKey();
        breadCrumbLink41.setParent(breadCrumbLink68);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink81 = breadCrumbLink41.getParent();
        breadCrumbLink4.setParent(breadCrumbLink41);
        Class<?> wildcardClass83 = breadCrumbLink41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "" + "'", str48.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "hi!" + "'", str79.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setUrl("");
        String str19 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!" + "'", str19.equals("hi!"));
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        breadCrumbLink24.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str33 = breadCrumbLink32.getParentKey();
        breadCrumbLink32.setLabel("hi!");
        breadCrumbLink24.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        String str38 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "hi!" + "'", str33.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        String str16 = breadCrumbLink4.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = breadCrumbLink21.getPrevious();
        String str29 = breadCrumbLink21.getFamily();
        breadCrumbLink4.setPrevious(breadCrumbLink21);
        boolean boolean31 = breadCrumbLink4.isCurrentPage();
        Class<?> wildcardClass32 = breadCrumbLink4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        breadCrumbLink9.setLabel("");
        String str21 = breadCrumbLink9.getUrl();
        String str22 = breadCrumbLink9.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = null;
        breadCrumbLink4.setParent(breadCrumbLink18);
        String str20 = breadCrumbLink4.getLabel();
        String str21 = breadCrumbLink4.getFamily();
        String str22 = breadCrumbLink4.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "" + "'", str20.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str14 = breadCrumbLink13.getParentKey();
        breadCrumbLink13.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor17 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest18 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse19 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str36 = breadCrumbLink35.getParentKey();
        breadCrumbLink29.addNext(breadCrumbLink35);
        org.springframework.web.servlet.ModelAndView modelAndView38 = null;
        breadCrumbInterceptor17.postHandle(httpServletRequest18, httpServletResponse19, (Object) breadCrumbLink35, modelAndView38);
        breadCrumbLink13.addNext(breadCrumbLink35);
        String str41 = breadCrumbLink13.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList57 = breadCrumbLink46.getNext();
        String str58 = breadCrumbLink46.getUrl();
        breadCrumbLink13.setPrevious(breadCrumbLink46);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList60 = breadCrumbLink46.getNext();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink8.addNext(breadCrumbLink46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "hi!" + "'", str41.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList60);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        Class<?> wildcardClass38 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink31);
        breadCrumbLink4.setPrevious(breadCrumbLink31);
        Class<?> wildcardClass43 = breadCrumbLink31.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str39 = breadCrumbLink38.getParentKey();
        breadCrumbLink38.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor42 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest43 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse44 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str61 = breadCrumbLink60.getParentKey();
        breadCrumbLink54.addNext(breadCrumbLink60);
        org.springframework.web.servlet.ModelAndView modelAndView63 = null;
        breadCrumbInterceptor42.postHandle(httpServletRequest43, httpServletResponse44, (Object) breadCrumbLink60, modelAndView63);
        breadCrumbLink38.addNext(breadCrumbLink60);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink70 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink70.addNext(breadCrumbLink75);
        breadCrumbLink75.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str84 = breadCrumbLink83.getParentKey();
        breadCrumbLink83.setLabel("hi!");
        breadCrumbLink75.addNext(breadCrumbLink83);
        breadCrumbLink60.addNext(breadCrumbLink83);
        breadCrumbLink9.setParent(breadCrumbLink60);
        String str90 = breadCrumbLink60.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "hi!" + "'", str39.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "hi!" + "'", str61.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "hi!" + "'", str84.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        boolean boolean8 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setUrl("hi!");
        String str11 = breadCrumbLink4.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setParentKey("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList28 = breadCrumbLink17.getNext();
        breadCrumbLink4.setParent(breadCrumbLink17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList28);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setUrl("hi!");
        breadCrumbLink4.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink7);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("");
        String str13 = breadCrumbLink9.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "" + "'", str13.equals(""));
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getParent();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList19 = breadCrumbLink18.getNext();
        breadCrumbLink18.setCurrentPage(true);
        breadCrumbLink18.setUrl("");
        breadCrumbLink18.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList19);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        boolean boolean42 = breadCrumbLink35.isCurrentPage();
        breadCrumbLink19.setPrevious(breadCrumbLink35);
        String str44 = breadCrumbLink19.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = breadCrumbLink19.getParent();
        breadCrumbLink19.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "" + "'", str44.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink45);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink21.setCurrentPage(true);
        boolean boolean30 = breadCrumbLink21.isCurrentPage();
        String str31 = breadCrumbLink21.getParentKey();
        breadCrumbLink21.setLabel("hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = breadCrumbLink4.getPrevious();
        String str36 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setCurrentPage(true);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList39 = breadCrumbLink4.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "" + "'", str36.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList39);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList33 = breadCrumbLink17.getNext();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = breadCrumbLink17.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink36);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hi!" + "'", str11.equals("hi!"));
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str10 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("");
        breadCrumbLink4.setPrevious(breadCrumbLink9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hi!" + "'", str10.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        String str32 = breadCrumbLink4.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink37.addNext(breadCrumbLink42);
        breadCrumbLink37.setCurrentPage(true);
        boolean boolean46 = breadCrumbLink37.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink51.addNext(breadCrumbLink56);
        breadCrumbLink51.setCurrentPage(true);
        boolean boolean60 = breadCrumbLink51.isCurrentPage();
        breadCrumbLink37.setPrevious(breadCrumbLink51);
        String str62 = breadCrumbLink51.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = breadCrumbLink51.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink68.addNext(breadCrumbLink73);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = breadCrumbLink68.getPrevious();
        String str76 = breadCrumbLink68.getFamily();
        breadCrumbLink68.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink79 = breadCrumbLink68.getParent();
        String str80 = breadCrumbLink68.getLabel();
        breadCrumbLink51.addNext(breadCrumbLink68);
        breadCrumbLink4.addNext(breadCrumbLink51);
        breadCrumbLink4.setParentKey("hi!");
        String str85 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "hi!" + "'", str62.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "" + "'", str76.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "hi!" + "'", str85.equals("hi!"));
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        Exception exception4 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) (-1L), exception4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        String str19 = breadCrumbLink12.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList20 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink25.addNext(breadCrumbLink30);
        breadCrumbLink25.setCurrentPage(true);
        boolean boolean34 = breadCrumbLink25.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink39.addNext(breadCrumbLink44);
        breadCrumbLink39.setCurrentPage(true);
        boolean boolean48 = breadCrumbLink39.isCurrentPage();
        breadCrumbLink25.setPrevious(breadCrumbLink39);
        breadCrumbLink12.setPrevious(breadCrumbLink39);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = breadCrumbLink12.getPrevious();
        Exception exception52 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink58.addNext(breadCrumbLink63);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = breadCrumbLink58.getPrevious();
        String str66 = breadCrumbLink58.getFamily();
        breadCrumbLink58.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        breadCrumbLink78.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink86 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str87 = breadCrumbLink86.getParentKey();
        breadCrumbLink86.setLabel("hi!");
        breadCrumbLink78.addNext(breadCrumbLink86);
        breadCrumbLink58.setPrevious(breadCrumbLink86);
        String str92 = breadCrumbLink58.getParentKey();
        String str93 = breadCrumbLink58.getUrl();
        breadCrumbLink12.setParent(breadCrumbLink58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "hi!" + "'", str87.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "" + "'", str92.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getParent();
        String str6 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str14 = breadCrumbLink13.getParentKey();
        breadCrumbLink13.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = breadCrumbLink13.getParent();
        breadCrumbLink13.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList20 = breadCrumbLink13.getNext();
        breadCrumbLink13.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink50 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink50.addNext(breadCrumbLink55);
        breadCrumbLink50.setCurrentPage(true);
        boolean boolean59 = breadCrumbLink50.isCurrentPage();
        String str60 = breadCrumbLink50.getParentKey();
        breadCrumbLink50.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink50.setParent(breadCrumbLink67);
        breadCrumbLink27.addNext(breadCrumbLink67);
        breadCrumbLink67.setUrl("");
        breadCrumbLink13.setPrevious(breadCrumbLink67);
        breadCrumbLink67.setParentKey("hi!");
        breadCrumbLink4.addNext(breadCrumbLink67);
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "hi!" + "'", str60.equals("hi!"));
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink32.getPrevious();
        String str40 = breadCrumbLink32.getFamily();
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink17.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink4.getPrevious();
        String str47 = breadCrumbLink46.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink46.setParent(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = null;
        breadCrumbLink46.addNext(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink21.addNext(breadCrumbLink26);
        breadCrumbLink21.setCurrentPage(true);
        boolean boolean30 = breadCrumbLink21.isCurrentPage();
        String str31 = breadCrumbLink21.getParentKey();
        breadCrumbLink21.setLabel("hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setUrl("");
        breadCrumbLink4.setUrl("");
        String str14 = breadCrumbLink4.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean19 = breadCrumbLink18.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = null;
        breadCrumbLink18.setPrevious(breadCrumbLink20);
        breadCrumbLink9.setPrevious(breadCrumbLink18);
        boolean boolean23 = breadCrumbLink9.isCurrentPage();
        breadCrumbLink9.setFamily("");
        String str26 = breadCrumbLink9.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink32.getPrevious();
        String str40 = breadCrumbLink32.getFamily();
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink17.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink4.getPrevious();
        String str47 = breadCrumbLink46.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink46.setParent(breadCrumbLink52);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = breadCrumbLink52.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!" + "'", str47.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink54);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str26 = breadCrumbLink25.getParentKey();
        breadCrumbLink25.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink25.getParent();
        breadCrumbLink17.setParent(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = breadCrumbLink17.getPrevious();
        breadCrumbLink9.setParent(breadCrumbLink17);
        breadCrumbLink17.setFamily("hi!");
        Class<?> wildcardClass35 = breadCrumbLink17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink7 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink7.addNext(breadCrumbLink12);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = breadCrumbLink7.getPrevious();
        String str15 = breadCrumbLink7.getFamily();
        breadCrumbLink7.setUrl("hi!");
        breadCrumbLink7.setFamily("");
        Exception exception20 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbLink7, exception20);
        javax.servlet.http.HttpServletRequest httpServletRequest22 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse23 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str29 = breadCrumbLink28.getFamily();
        breadCrumbLink28.setCurrentPage(true);
        org.springframework.web.servlet.ModelAndView modelAndView32 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest22, httpServletResponse23, (Object) breadCrumbLink28, modelAndView32);
        javax.servlet.http.HttpServletRequest httpServletRequest34 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse35 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        String str50 = breadCrumbLink40.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList51 = breadCrumbLink40.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str57 = breadCrumbLink56.getParentKey();
        breadCrumbLink56.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink60 = breadCrumbLink56.getParent();
        breadCrumbLink56.setFamily("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList63 = breadCrumbLink56.getNext();
        breadCrumbLink40.setParent(breadCrumbLink56);
        String str65 = breadCrumbLink40.getParentKey();
        org.springframework.web.servlet.ModelAndView modelAndView66 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest34, httpServletResponse35, (Object) breadCrumbLink40, modelAndView66);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList68 = breadCrumbLink40.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "" + "'", str15.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str50 + "' != '" + "" + "'", str50.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "hi!" + "'", str65.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList68);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        breadCrumbLink12.setCurrentPage(true);
        boolean boolean21 = breadCrumbLink12.isCurrentPage();
        String str22 = breadCrumbLink12.getFamily();
        Exception exception23 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink12, exception23);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList25 = breadCrumbLink12.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "hi!", false, "");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList31 = breadCrumbLink30.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        String str46 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink36.setParent(breadCrumbLink53);
        breadCrumbLink30.addNext(breadCrumbLink53);
        breadCrumbLink12.setPrevious(breadCrumbLink53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "" + "'", str22.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        Exception exception19 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink17, exception19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink32.setParentKey("");
        breadCrumbLink32.setFamily("");
        breadCrumbLink32.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        breadCrumbLink46.setCurrentPage(true);
        boolean boolean55 = breadCrumbLink46.isCurrentPage();
        String str56 = breadCrumbLink46.getParentKey();
        breadCrumbLink46.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink46.setParent(breadCrumbLink63);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink74 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink69.addNext(breadCrumbLink74);
        breadCrumbLink69.setCurrentPage(true);
        boolean boolean78 = breadCrumbLink69.isCurrentPage();
        String str79 = breadCrumbLink69.getParentKey();
        breadCrumbLink69.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink86 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink69.setParent(breadCrumbLink86);
        breadCrumbLink46.addNext(breadCrumbLink86);
        breadCrumbLink86.setUrl("");
        breadCrumbLink86.setFamily("");
        breadCrumbLink32.setPrevious(breadCrumbLink86);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink94 = breadCrumbLink32.getPrevious();
        org.springframework.web.servlet.ModelAndView modelAndView95 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink94, modelAndView95);
        Class<?> wildcardClass97 = breadCrumbInterceptor0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!" + "'", str56.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "hi!" + "'", str79.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "");
        breadCrumbLink4.setPrevious(breadCrumbLink40);
        String str42 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = breadCrumbLink32.getPrevious();
        String str40 = breadCrumbLink32.getFamily();
        breadCrumbLink32.setUrl("hi!");
        breadCrumbLink17.addNext(breadCrumbLink32);
        breadCrumbLink4.setPrevious(breadCrumbLink32);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink4.getNext();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink52.addNext(breadCrumbLink57);
        breadCrumbLink57.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink65 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str66 = breadCrumbLink65.getParentKey();
        breadCrumbLink65.setLabel("hi!");
        breadCrumbLink57.addNext(breadCrumbLink65);
        boolean boolean70 = breadCrumbLink65.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "hi!" + "'", str66.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink19.addNext(breadCrumbLink24);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = breadCrumbLink19.getPrevious();
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink4.addNext(breadCrumbLink19);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        boolean boolean42 = breadCrumbLink35.isCurrentPage();
        breadCrumbLink19.setPrevious(breadCrumbLink35);
        breadCrumbLink19.setLabel("");
        String str46 = breadCrumbLink19.getFamily();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "" + "'", str46.equals(""));
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList5 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor6 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest7 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse8 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink13.addNext(breadCrumbLink18);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = breadCrumbLink13.getPrevious();
        String str21 = breadCrumbLink13.getFamily();
        breadCrumbLink13.setUrl("hi!");
        breadCrumbLink13.setFamily("");
        Exception exception26 = null;
        breadCrumbInterceptor6.afterCompletion(httpServletRequest7, httpServletResponse8, (Object) breadCrumbLink13, exception26);
        breadCrumbLink4.setParent(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "" + "'", str21.equals(""));
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink5 = breadCrumbLink4.getPrevious();
        String str6 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor8 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest9 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse10 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink15.addNext(breadCrumbLink20);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str27 = breadCrumbLink26.getParentKey();
        breadCrumbLink20.addNext(breadCrumbLink26);
        org.springframework.web.servlet.ModelAndView modelAndView29 = null;
        breadCrumbInterceptor8.postHandle(httpServletRequest9, httpServletResponse10, (Object) breadCrumbLink26, modelAndView29);
        breadCrumbLink4.addNext(breadCrumbLink26);
        boolean boolean32 = breadCrumbLink4.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink14 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink14.addNext(breadCrumbLink19);
        breadCrumbLink19.setUrl("hi!");
        breadCrumbLink19.setParentKey("");
        breadCrumbLink19.setFamily("");
        String str27 = breadCrumbLink19.getFamily();
        breadCrumbLink4.addNext(breadCrumbLink19);
        breadCrumbLink4.setCurrentPage(true);
        String str31 = breadCrumbLink4.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hi!" + "'", str31.equals("hi!"));
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink9.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink9.getNext();
        Class<?> wildcardClass13 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        breadCrumbLink18.setFamily("");
        String str51 = breadCrumbLink18.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        boolean boolean57 = breadCrumbLink56.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink62.addNext(breadCrumbLink67);
        breadCrumbLink67.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink75 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str76 = breadCrumbLink75.getParentKey();
        breadCrumbLink75.setLabel("hi!");
        breadCrumbLink67.addNext(breadCrumbLink75);
        boolean boolean80 = breadCrumbLink67.isCurrentPage();
        breadCrumbLink56.addNext(breadCrumbLink67);
        boolean boolean82 = breadCrumbLink56.isCurrentPage();
        breadCrumbLink18.setPrevious(breadCrumbLink56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        Exception exception14 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) 0L, exception14);
        javax.servlet.http.HttpServletRequest httpServletRequest16 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse17 = null;
        org.springframework.web.servlet.ModelAndView modelAndView19 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest16, httpServletResponse17, (Object) 1, modelAndView19);
        javax.servlet.http.HttpServletRequest httpServletRequest21 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse22 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getFamily();
        breadCrumbLink27.setUrl("");
        String str40 = breadCrumbLink27.getFamily();
        String str41 = breadCrumbLink27.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str47 = breadCrumbLink46.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = breadCrumbLink46.getParent();
        breadCrumbLink27.setPrevious(breadCrumbLink46);
        Exception exception50 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest21, httpServletResponse22, (Object) breadCrumbLink27, exception50);
        String str52 = breadCrumbLink27.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList53 = breadCrumbLink27.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink63 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink58.addNext(breadCrumbLink63);
        breadCrumbLink63.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str72 = breadCrumbLink71.getParentKey();
        breadCrumbLink71.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink79 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str80 = breadCrumbLink79.getParentKey();
        breadCrumbLink79.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink83 = breadCrumbLink79.getParent();
        breadCrumbLink71.setParent(breadCrumbLink83);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink85 = breadCrumbLink71.getPrevious();
        breadCrumbLink63.setParent(breadCrumbLink71);
        breadCrumbLink71.setLabel("hi!");
        breadCrumbLink27.setPrevious(breadCrumbLink71);
        String str90 = breadCrumbLink27.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "" + "'", str40.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "" + "'", str41.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "" + "'", str52.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!" + "'", str72.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "hi!" + "'", str80.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "hi!" + "'", str90.equals("hi!"));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        String str32 = breadCrumbLink23.getFamily();
        String str33 = breadCrumbLink23.getParentKey();
        String str34 = breadCrumbLink23.getFamily();
        breadCrumbLink23.setUrl("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "" + "'", str34.equals(""));
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        String str29 = breadCrumbLink18.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink18.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink35.addNext(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink35.getPrevious();
        String str43 = breadCrumbLink35.getFamily();
        breadCrumbLink35.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = breadCrumbLink35.getParent();
        String str47 = breadCrumbLink35.getLabel();
        breadCrumbLink18.addNext(breadCrumbLink35);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = breadCrumbLink35.getPrevious();
        breadCrumbLink35.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "" + "'", str43.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink49);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str18 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        breadCrumbLink9.addNext(breadCrumbLink17);
        boolean boolean22 = breadCrumbLink9.isCurrentPage();
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink9.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink25.setFamily("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "hi!" + "'", str18.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        boolean boolean14 = breadCrumbLink9.isCurrentPage();
        String str15 = breadCrumbLink9.getParentKey();
        String str16 = breadCrumbLink9.getParentKey();
        breadCrumbLink9.setFamily("hi!");
        breadCrumbLink9.setParentKey("hi!");
        boolean boolean21 = breadCrumbLink9.isCurrentPage();
        breadCrumbLink9.setParentKey("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "hi!" + "'", str15.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        String str11 = breadCrumbLink4.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList12 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink31.addNext(breadCrumbLink36);
        breadCrumbLink31.setCurrentPage(true);
        boolean boolean40 = breadCrumbLink31.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink31);
        breadCrumbLink4.setPrevious(breadCrumbLink31);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = breadCrumbLink4.getPrevious();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList44 = breadCrumbLink4.getNext();
        Class<?> wildcardClass45 = breadCrumbLinkList44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "" + "'", str11.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink4.getPrevious();
        breadCrumbLink4.setCurrentPage(true);
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink28 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str29 = breadCrumbLink28.getParentKey();
        breadCrumbLink28.setLabel("hi!");
        breadCrumbLink28.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink38 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink38.addNext(breadCrumbLink43);
        breadCrumbLink43.setUrl("hi!");
        breadCrumbLink43.setParentKey("");
        breadCrumbLink43.setFamily("");
        String str51 = breadCrumbLink43.getFamily();
        breadCrumbLink28.addNext(breadCrumbLink43);
        breadCrumbLink28.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink28);
        String str56 = breadCrumbLink28.getFamily();
        String str57 = breadCrumbLink28.getFamily();
        Class<?> wildcardClass58 = breadCrumbLink28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "hi!" + "'", str29.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str56 + "' != '" + "" + "'", str56.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink10 = breadCrumbLink4.getParent();
        breadCrumbLink4.setLabel("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = breadCrumbLink17.getPrevious();
        String str25 = breadCrumbLink17.getFamily();
        breadCrumbLink17.setUrl("hi!");
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink39 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink34.addNext(breadCrumbLink39);
        boolean boolean41 = breadCrumbLink34.isCurrentPage();
        breadCrumbLink17.setPrevious(breadCrumbLink34);
        breadCrumbLink34.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink56 = breadCrumbLink49.getPrevious();
        String str57 = breadCrumbLink49.getFamily();
        breadCrumbLink49.setUrl("hi!");
        breadCrumbLink49.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink66 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean67 = breadCrumbLink66.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = null;
        breadCrumbLink66.setPrevious(breadCrumbLink68);
        breadCrumbLink49.setParent(breadCrumbLink66);
        breadCrumbLink34.setParent(breadCrumbLink66);
        breadCrumbLink4.setParent(breadCrumbLink34);
        String str73 = breadCrumbLink34.getLabel();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "" + "'", str57.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        org.springframework.web.servlet.ModelAndView modelAndView7 = null;
        breadCrumbInterceptor3.postHandle(httpServletRequest4, httpServletResponse5, (Object) "", modelAndView7);
        Exception exception9 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor3, exception9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor13 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink20.addNext(breadCrumbLink25);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str32 = breadCrumbLink31.getParentKey();
        breadCrumbLink25.addNext(breadCrumbLink31);
        org.springframework.web.servlet.ModelAndView modelAndView34 = null;
        breadCrumbInterceptor13.postHandle(httpServletRequest14, httpServletResponse15, (Object) breadCrumbLink31, modelAndView34);
        org.springframework.web.servlet.ModelAndView modelAndView36 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink31, modelAndView36);
        breadCrumbLink31.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink44.addNext(breadCrumbLink49);
        String str51 = breadCrumbLink44.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList52 = breadCrumbLink44.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        breadCrumbLink57.setCurrentPage(true);
        boolean boolean66 = breadCrumbLink57.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink71 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink76 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink71.addNext(breadCrumbLink76);
        breadCrumbLink71.setCurrentPage(true);
        boolean boolean80 = breadCrumbLink71.isCurrentPage();
        breadCrumbLink57.setPrevious(breadCrumbLink71);
        breadCrumbLink44.setPrevious(breadCrumbLink71);
        String str83 = breadCrumbLink71.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink84 = breadCrumbLink71.getParent();
        breadCrumbLink31.addNext(breadCrumbLink71);
        String str86 = breadCrumbLink71.getLabel();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList87 = breadCrumbLink71.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!" + "'", str32.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "" + "'", str51.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "" + "'", str86.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList87);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList46 = breadCrumbLink4.getNext();
        breadCrumbLink4.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList46);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getFamily();
        String str6 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink11.addNext(breadCrumbLink16);
        breadCrumbLink16.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str25 = breadCrumbLink24.getParentKey();
        breadCrumbLink24.setLabel("hi!");
        breadCrumbLink16.addNext(breadCrumbLink24);
        boolean boolean29 = breadCrumbLink16.isCurrentPage();
        breadCrumbLink4.setParent(breadCrumbLink16);
        breadCrumbLink16.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str38 = breadCrumbLink37.getFamily();
        String str39 = breadCrumbLink37.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = breadCrumbLink37.getPrevious();
        breadCrumbLink16.setPrevious(breadCrumbLink37);
        breadCrumbLink16.setUrl("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "hi!" + "'", str25.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "" + "'", str38.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink40);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str16 = breadCrumbLink15.getParentKey();
        breadCrumbLink9.setParent(breadCrumbLink15);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = breadCrumbLink9.getParent();
        String str19 = breadCrumbLink9.getFamily();
        String str20 = breadCrumbLink9.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "hi!" + "'", str16.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "" + "'", str19.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "hi!" + "'", str20.equals("hi!"));
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        boolean boolean15 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setFamily("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "");
        breadCrumbLink4.setPrevious(breadCrumbLink40);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = breadCrumbLink40.getPrevious();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink42);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink36.addNext(breadCrumbLink41);
        breadCrumbLink36.setCurrentPage(true);
        boolean boolean45 = breadCrumbLink36.isCurrentPage();
        String str46 = breadCrumbLink36.getParentKey();
        breadCrumbLink36.setLabel("hi!");
        breadCrumbLink36.setUrl("");
        breadCrumbLink9.addNext(breadCrumbLink36);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = breadCrumbLink36.getParent();
        // The following exception was thrown during execution in test generation
        try {
            breadCrumbLink52.setCurrentPage(false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "hi!" + "'", str46.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink52);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        org.springframework.web.servlet.ModelAndView modelAndView9 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) 0, modelAndView9);
        javax.servlet.http.HttpServletRequest httpServletRequest11 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse12 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink22 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink17.addNext(breadCrumbLink22);
        breadCrumbLink17.setCurrentPage(true);
        boolean boolean26 = breadCrumbLink17.isCurrentPage();
        String str27 = breadCrumbLink17.getParentKey();
        breadCrumbLink17.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink17.setParent(breadCrumbLink34);
        Exception exception36 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest11, httpServletResponse12, (Object) breadCrumbLink34, exception36);
        String str38 = breadCrumbLink34.getFamily();
        Class<?> wildcardClass39 = breadCrumbLink34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor3 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest4 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse5 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor6 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest7 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse8 = null;
        org.springframework.web.servlet.ModelAndView modelAndView10 = null;
        breadCrumbInterceptor6.postHandle(httpServletRequest7, httpServletResponse8, (Object) "", modelAndView10);
        Exception exception12 = null;
        breadCrumbInterceptor3.afterCompletion(httpServletRequest4, httpServletResponse5, (Object) breadCrumbInterceptor6, exception12);
        javax.servlet.http.HttpServletRequest httpServletRequest14 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse15 = null;
        Exception exception17 = null;
        breadCrumbInterceptor6.afterCompletion(httpServletRequest14, httpServletResponse15, (Object) 0L, exception17);
        javax.servlet.http.HttpServletRequest httpServletRequest19 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse20 = null;
        org.springframework.web.servlet.ModelAndView modelAndView22 = null;
        breadCrumbInterceptor6.postHandle(httpServletRequest19, httpServletResponse20, (Object) (byte) 100, modelAndView22);
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor26 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor29 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest30 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse31 = null;
        org.springframework.web.servlet.ModelAndView modelAndView33 = null;
        breadCrumbInterceptor29.postHandle(httpServletRequest30, httpServletResponse31, (Object) "", modelAndView33);
        Exception exception35 = null;
        breadCrumbInterceptor26.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) breadCrumbInterceptor29, exception35);
        javax.servlet.http.HttpServletRequest httpServletRequest37 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse38 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor39 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest40 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse41 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink46 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink51 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink46.addNext(breadCrumbLink51);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str58 = breadCrumbLink57.getParentKey();
        breadCrumbLink51.addNext(breadCrumbLink57);
        org.springframework.web.servlet.ModelAndView modelAndView60 = null;
        breadCrumbInterceptor39.postHandle(httpServletRequest40, httpServletResponse41, (Object) breadCrumbLink57, modelAndView60);
        org.springframework.web.servlet.ModelAndView modelAndView62 = null;
        breadCrumbInterceptor26.postHandle(httpServletRequest37, httpServletResponse38, (Object) breadCrumbLink57, modelAndView62);
        javax.servlet.http.HttpServletRequest httpServletRequest64 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse65 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor66 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest67 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse68 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink78 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink73.addNext(breadCrumbLink78);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink84 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str85 = breadCrumbLink84.getParentKey();
        breadCrumbLink78.addNext(breadCrumbLink84);
        org.springframework.web.servlet.ModelAndView modelAndView87 = null;
        breadCrumbInterceptor66.postHandle(httpServletRequest67, httpServletResponse68, (Object) breadCrumbLink84, modelAndView87);
        Exception exception89 = null;
        breadCrumbInterceptor26.afterCompletion(httpServletRequest64, httpServletResponse65, (Object) breadCrumbLink84, exception89);
        org.springframework.web.servlet.ModelAndView modelAndView91 = null;
        breadCrumbInterceptor6.postHandle(httpServletRequest24, httpServletResponse25, (Object) breadCrumbLink84, modelAndView91);
        Exception exception93 = null;
        breadCrumbInterceptor0.afterCompletion(httpServletRequest1, httpServletResponse2, (Object) breadCrumbInterceptor6, exception93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "hi!" + "'", str58.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "hi!" + "'", str85.equals("hi!"));
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", true, "");
        breadCrumbLink4.setLabel("");
        breadCrumbLink4.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean14 = breadCrumbLink13.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = null;
        breadCrumbLink13.setPrevious(breadCrumbLink15);
        String str17 = breadCrumbLink13.getParentKey();
        breadCrumbLink13.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setParentKey("");
        breadCrumbLink29.setFamily("");
        breadCrumbLink29.setCurrentPage(false);
        breadCrumbLink29.setLabel("");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList41 = breadCrumbLink29.getNext();
        String str42 = breadCrumbLink29.getParentKey();
        breadCrumbLink13.setPrevious(breadCrumbLink29);
        breadCrumbLink4.setPrevious(breadCrumbLink13);
        breadCrumbLink4.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "" + "'", str42.equals(""));
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink27.addNext(breadCrumbLink32);
        breadCrumbLink27.setCurrentPage(true);
        boolean boolean36 = breadCrumbLink27.isCurrentPage();
        String str37 = breadCrumbLink27.getParentKey();
        breadCrumbLink27.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink44 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink27.setParent(breadCrumbLink44);
        breadCrumbLink4.addNext(breadCrumbLink44);
        breadCrumbLink44.setUrl("");
        breadCrumbLink44.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink55 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", true, "");
        breadCrumbLink55.setFamily("");
        breadCrumbLink55.setParentKey("hi!");
        String str60 = breadCrumbLink55.getUrl();
        breadCrumbLink44.setParent(breadCrumbLink55);
        String str62 = breadCrumbLink44.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink67 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink67.addNext(breadCrumbLink72);
        breadCrumbLink72.setUrl("hi!");
        breadCrumbLink72.setParentKey("");
        breadCrumbLink44.setParent(breadCrumbLink72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "hi!" + "'", str37.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "" + "'", str62.equals(""));
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean19 = breadCrumbLink18.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink20 = null;
        breadCrumbLink18.setPrevious(breadCrumbLink20);
        breadCrumbLink9.setPrevious(breadCrumbLink18);
        boolean boolean23 = breadCrumbLink9.isCurrentPage();
        breadCrumbLink9.setFamily("");
        String str26 = breadCrumbLink9.getFamily();
        String str27 = breadCrumbLink9.getLabel();
        Class<?> wildcardClass28 = breadCrumbLink9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "" + "'", str27.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink13 = breadCrumbLink9.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink23.setUrl("hi!");
        breadCrumbLink23.setParentKey("");
        breadCrumbLink23.setFamily("");
        breadCrumbLink9.addNext(breadCrumbLink23);
        String str32 = breadCrumbLink23.getFamily();
        String str33 = breadCrumbLink23.getParentKey();
        breadCrumbLink23.setFamily("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "" + "'", str32.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "" + "'", str33.equals(""));
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink4.setLabel("");
        String str25 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setParentKey("");
        breadCrumbLink4.setCurrentPage(true);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = breadCrumbLink4.getParent();
        breadCrumbLink30.setUrl("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink37.addNext(breadCrumbLink42);
        String str44 = breadCrumbLink42.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList45 = breadCrumbLink42.getNext();
        breadCrumbLink30.setPrevious(breadCrumbLink42);
        String str47 = breadCrumbLink30.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "" + "'", str25.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "" + "'", str47.equals(""));
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("hi!", "", false, "hi!");
        breadCrumbLink4.setParent(breadCrumbLink21);
        breadCrumbLink21.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink21.getParent();
        breadCrumbLink21.setCurrentPage(true);
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList28 = breadCrumbLink21.getNext();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!" + "'", str14.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList28);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink18 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink18.addNext(breadCrumbLink23);
        breadCrumbLink18.setCurrentPage(true);
        boolean boolean27 = breadCrumbLink18.isCurrentPage();
        breadCrumbLink4.setPrevious(breadCrumbLink18);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = breadCrumbLink18.getPrevious();
        // The following exception was thrown during execution in test generation
        try {
            String str30 = breadCrumbLink29.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink29);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        breadCrumbLink4.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor16 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest17 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse18 = null;
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor19 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest20 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse21 = null;
        org.springframework.web.servlet.ModelAndView modelAndView23 = null;
        breadCrumbInterceptor19.postHandle(httpServletRequest20, httpServletResponse21, (Object) "", modelAndView23);
        Exception exception25 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest17, httpServletResponse18, (Object) breadCrumbInterceptor19, exception25);
        javax.servlet.http.HttpServletRequest httpServletRequest27 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse28 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink33 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        Exception exception34 = null;
        breadCrumbInterceptor16.afterCompletion(httpServletRequest27, httpServletResponse28, (Object) false, exception34);
        javax.servlet.http.HttpServletRequest httpServletRequest36 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse37 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink42 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "hi!", false, "");
        org.springframework.web.servlet.ModelAndView modelAndView43 = null;
        breadCrumbInterceptor16.postHandle(httpServletRequest36, httpServletResponse37, (Object) breadCrumbLink42, modelAndView43);
        breadCrumbLink4.setParent(breadCrumbLink42);
        String str46 = breadCrumbLink42.getUrl();
        breadCrumbLink42.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink53 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink58 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink53.addNext(breadCrumbLink58);
        breadCrumbLink53.setCurrentPage(true);
        boolean boolean62 = breadCrumbLink53.isCurrentPage();
        String str63 = breadCrumbLink53.getFamily();
        breadCrumbLink53.setUrl("");
        String str66 = breadCrumbLink53.getFamily();
        String str67 = breadCrumbLink53.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink72 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str73 = breadCrumbLink72.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink74 = breadCrumbLink72.getParent();
        breadCrumbLink53.setPrevious(breadCrumbLink72);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink76 = breadCrumbLink53.getPrevious();
        breadCrumbLink42.setParent(breadCrumbLink76);
        String str78 = breadCrumbLink42.getParentKey();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "" + "'", str63.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "" + "'", str66.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str67 + "' != '" + "" + "'", str67.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "" + "'", str73.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "" + "'", str78.equals(""));
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor0 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest1 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse2 = null;
        org.springframework.web.servlet.ModelAndView modelAndView4 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest1, httpServletResponse2, (Object) "", modelAndView4);
        javax.servlet.http.HttpServletRequest httpServletRequest6 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse7 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink12.addNext(breadCrumbLink17);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink17.getPrevious();
        breadCrumbLink17.setParentKey("");
        breadCrumbLink17.setUrl("");
        breadCrumbLink17.setFamily("hi!");
        org.springframework.web.servlet.ModelAndView modelAndView26 = null;
        breadCrumbInterceptor0.postHandle(httpServletRequest6, httpServletResponse7, (Object) breadCrumbLink17, modelAndView26);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink32 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink37 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink32.addNext(breadCrumbLink37);
        breadCrumbLink37.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink41 = breadCrumbLink37.getParent();
        boolean boolean42 = breadCrumbLink37.isCurrentPage();
        String str43 = breadCrumbLink37.getParentKey();
        String str44 = breadCrumbLink37.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink49 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink54 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink49.addNext(breadCrumbLink54);
        String str56 = breadCrumbLink54.getUrl();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList57 = breadCrumbLink54.getNext();
        breadCrumbLink37.addNext(breadCrumbLink54);
        breadCrumbLink17.addNext(breadCrumbLink54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "hi!" + "'", str43.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!" + "'", str44.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList57);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean5 = breadCrumbLink4.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink6 = null;
        breadCrumbLink4.setPrevious(breadCrumbLink6);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getPrevious();
        String str9 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setParentKey("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink12 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink15 = breadCrumbLink4.getParent();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink15);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink9.setUrl("hi!");
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setFamily("");
        breadCrumbLink9.setCurrentPage(false);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink19 = breadCrumbLink9.getParent();
        breadCrumbLink9.setFamily("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink26 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink31 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink26.addNext(breadCrumbLink31);
        breadCrumbLink26.setCurrentPage(true);
        boolean boolean35 = breadCrumbLink26.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink45 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink40.addNext(breadCrumbLink45);
        breadCrumbLink40.setCurrentPage(true);
        boolean boolean49 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink26.setPrevious(breadCrumbLink40);
        String str51 = breadCrumbLink40.getParentKey();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink52 = breadCrumbLink40.getParent();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink64 = breadCrumbLink57.getPrevious();
        String str65 = breadCrumbLink57.getFamily();
        breadCrumbLink57.setUrl("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink68 = breadCrumbLink57.getParent();
        String str69 = breadCrumbLink57.getLabel();
        breadCrumbLink40.addNext(breadCrumbLink57);
        boolean boolean71 = breadCrumbLink40.isCurrentPage();
        breadCrumbLink9.setPrevious(breadCrumbLink40);
        breadCrumbLink9.setLabel("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!" + "'", str51.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "" + "'", str65.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "" + "'", str69.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getFamily();
        String str18 = breadCrumbLink4.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink23 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str24 = breadCrumbLink23.getFamily();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink25 = breadCrumbLink23.getParent();
        breadCrumbLink4.setPrevious(breadCrumbLink23);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink27 = breadCrumbLink4.getPrevious();
        String str28 = breadCrumbLink27.getUrl();
        String str29 = breadCrumbLink27.getLabel();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink34 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        boolean boolean35 = breadCrumbLink34.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink36 = null;
        breadCrumbLink34.setPrevious(breadCrumbLink36);
        String str38 = breadCrumbLink34.getParentKey();
        breadCrumbLink34.setCurrentPage(false);
        breadCrumbLink27.setPrevious(breadCrumbLink34);
        String str42 = breadCrumbLink27.getParentKey();
        boolean boolean43 = breadCrumbLink27.isCurrentPage();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "" + "'", str18.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str29 + "' != '" + "" + "'", str29.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "hi!" + "'", str42.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        breadCrumbLink4.setCurrentPage(true);
        boolean boolean13 = breadCrumbLink4.isCurrentPage();
        String str14 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setUrl("");
        String str17 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setParentKey("");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink24 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink29 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink24.addNext(breadCrumbLink29);
        breadCrumbLink29.setUrl("hi!");
        breadCrumbLink29.setCurrentPage(true);
        breadCrumbLink4.setPrevious(breadCrumbLink29);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink40 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", true, "");
        breadCrumbLink4.setPrevious(breadCrumbLink40);
        breadCrumbLink4.setCurrentPage(true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "" + "'", str14.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "" + "'", str17.equals(""));
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink9.getPrevious();
        breadCrumbLink9.setParentKey("");
        breadCrumbLink9.setUrl("");
        String str16 = breadCrumbLink9.getUrl();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink21 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str22 = breadCrumbLink21.getUrl();
        breadCrumbLink21.setFamily("hi!");
        breadCrumbLink9.setParent(breadCrumbLink21);
        String str26 = breadCrumbLink9.getUrl();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "" + "'", str16.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "" + "'", str26.equals(""));
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink9 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink4.addNext(breadCrumbLink9);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink11 = breadCrumbLink4.getPrevious();
        String str12 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList15 = breadCrumbLink4.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink16 = breadCrumbLink4.getPrevious();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink17 = breadCrumbLink4.getPrevious();
        dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor breadCrumbInterceptor18 = new dummiesmind.breadcrumb.springmvc.interceptor.BreadCrumbInterceptor();
        javax.servlet.http.HttpServletRequest httpServletRequest19 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse20 = null;
        Exception exception22 = null;
        breadCrumbInterceptor18.afterCompletion(httpServletRequest19, httpServletResponse20, (Object) (-1L), exception22);
        javax.servlet.http.HttpServletRequest httpServletRequest24 = null;
        javax.servlet.http.HttpServletResponse httpServletResponse25 = null;
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink30 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink35 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink30.addNext(breadCrumbLink35);
        String str37 = breadCrumbLink30.getFamily();
        java.util.List<dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink> breadCrumbLinkList38 = breadCrumbLink30.getNext();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink43 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink48 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink43.addNext(breadCrumbLink48);
        breadCrumbLink43.setCurrentPage(true);
        boolean boolean52 = breadCrumbLink43.isCurrentPage();
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink57 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink62 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        breadCrumbLink57.addNext(breadCrumbLink62);
        breadCrumbLink57.setCurrentPage(true);
        boolean boolean66 = breadCrumbLink57.isCurrentPage();
        breadCrumbLink43.setPrevious(breadCrumbLink57);
        breadCrumbLink30.setPrevious(breadCrumbLink57);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink69 = breadCrumbLink30.getPrevious();
        Exception exception70 = null;
        breadCrumbInterceptor18.afterCompletion(httpServletRequest24, httpServletResponse25, (Object) breadCrumbLink30, exception70);
        breadCrumbLink4.setPrevious(breadCrumbLink30);
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink73 = breadCrumbLink4.getPrevious();
        String str74 = breadCrumbLink4.getFamily();
        breadCrumbLink4.setLabel("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "" + "'", str12.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "" + "'", str37.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLinkList38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(breadCrumbLink73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "" + "'", str74.equals(""));
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink4 = new dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink("", "", false, "hi!");
        String str5 = breadCrumbLink4.getParentKey();
        breadCrumbLink4.setLabel("hi!");
        dummiesmind.breadcrumb.springmvc.breadcrumb.BreadCrumbLink breadCrumbLink8 = breadCrumbLink4.getParent();
        breadCrumbLink4.setFamily("");
        String str11 = breadCrumbLink4.getUrl();
        breadCrumbLink4.setCurrentPage(false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(breadCrumbLink8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }
}

