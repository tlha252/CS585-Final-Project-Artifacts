/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 12 23:09:41 GMT 2019
 */

package net.guides.springboot.todomanagementspringboot.evon_thirty_seconds.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Date;
import net.guides.springboot.todomanagement.model.Todo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Todo_ESTest extends Todo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2958, 2958, 2958, 2958, 0);
      Todo todo0 = new Todo("Az/SC.6gS lS", "org.springframework.boot.test.context.FilteredClassLoader$PackageFilter", mockDate0, true);
      String string0 = todo0.getUserName();
      assertEquals("org.springframework.boot.test.context.FilteredClassLoader$PackageFilter", todo0.getDescription());
      assertEquals("Az/SC.6gS lS", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1, 1, 2177, 2177, 2177);
      Todo todo0 = new Todo("", "", mockDate0, true);
      Date date0 = todo0.getTargetDate();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setId(1576L);
      long long0 = todo0.getId();
      assertEquals(1576L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2775, 2775, 2775);
      Todo todo0 = new Todo("wpi('jf+o(nr{r:.EDL", "wpi('jf+o(nr{r:.EDL", mockDate0, true);
      String string0 = todo0.getDescription();
      assertEquals("wpi('jf+o(nr{r:.EDL", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      long long0 = todo0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      todo0.setId((-820L));
      long long0 = todo0.getId();
      assertEquals((-820L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      todo0.setDescription("JjG");
      assertEquals("JjG", todo0.getDescription());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      todo0.setTargetDate((Date) null);
      assertEquals("", todo0.getDescription());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      Date date0 = todo0.getTargetDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      todo0.setUserName("");
      assertEquals(0L, todo0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      String string0 = todo0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      String string0 = todo0.getUserName();
      assertEquals("", string0);
  }
}
