/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 12 22:59:42 GMT 2019
 */

package net.guides.springboot.todomanagementspringboot.evo_two_seconds.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Date;
import net.guides.springboot.todomanagement.model.Todo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Todo_ESTest extends Todo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      Date date0 = todo0.getTargetDate();
      assertEquals("Sun Aug 12 00:02:44 GMT 1900", date0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setId((-1L));
      long long0 = todo0.getId();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      long long0 = todo0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      todo0.setId(2076L);
      long long0 = todo0.getId();
      assertEquals(2076L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      todo0.setDescription("%r");
      String string0 = todo0.getDescription();
      assertEquals("%r", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      todo0.setTargetDate(mockDate0);
      assertEquals(0L, todo0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Todo todo0 = new Todo();
      Date date0 = todo0.getTargetDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setUserName("org.springframework.web.util.HierarchicalUriComponents$UriTemplateEncoder");
      String string0 = todo0.getUserName();
      assertEquals("org.springframework.web.util.HierarchicalUriComponents$UriTemplateEncoder", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      String string0 = todo0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, 224, 0, (-1), 224);
      Todo todo0 = new Todo("", "", mockDate0, true);
      String string0 = todo0.getUserName();
      assertEquals("", string0);
  }
}
