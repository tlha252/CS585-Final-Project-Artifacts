/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 12 23:17:53 GMT 2019
 */

package net.guides.springboot.todomanagementspringboot.evo_sixty_seconds.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.Instant;
import java.util.Date;
import net.guides.springboot.todomanagement.model.Todo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Todo_ESTest extends Todo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      Todo todo0 = new Todo("O9", "O9", date0, true);
      String string0 = todo0.getUserName();
      assertEquals("O9", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Todo todo0 = new Todo("", "", (Date) null, false);
      String string0 = todo0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Todo todo0 = new Todo();
      MockDate mockDate0 = new MockDate((-1L));
      todo0.setTargetDate(mockDate0);
      Date date0 = todo0.getTargetDate();
      assertEquals("Wed Dec 31 23:59:59 GMT 1969", date0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setId(173L);
      long long0 = todo0.getId();
      assertEquals(173L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setDescription("HttpHandler must not be null");
      String string0 = todo0.getDescription();
      assertEquals("HttpHandler must not be null", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate(352, 352, 225, (-126), 352);
      Todo todo0 = new Todo(":bUkxbDj:hD S8`+", ":bUkxbDj:hD S8`+", mockDate0, false);
      long long0 = todo0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setId((-573L));
      long long0 = todo0.getId();
      assertEquals((-573L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Todo todo0 = new Todo();
      todo0.setDescription("");
      String string0 = todo0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Todo todo0 = new Todo();
      Date date0 = todo0.getTargetDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate(352, 352, 225, (-126), 352);
      Todo todo0 = new Todo(":bUkxbDj:hD S8`+", ":bUkxbDj:hD S8`+", mockDate0, false);
      todo0.setUserName("");
      assertEquals("", todo0.getUserName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Todo todo0 = new Todo();
      String string0 = todo0.getUserName();
      assertNull(string0);
  }
}
